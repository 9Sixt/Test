if not game:IsLoaded() then game.Loaded:Wait()end

repeat task.wait() until game:IsLoaded() and game:GetService("Players") and game:GetService("Players").LocalPlayer and game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.PlayerGui and game:GetService("Players").LocalPlayer.Backpack

if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Main (minimal)") then game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("SetTeam", _G.Team or "Pirates") repeat wait(5) until not game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Main (minimal)")end

getgenv = getgenv
if getgenv().One_Executions then return end
getgenv().One_Executions = true

_G.Configs = {}

do
	_index = {};
	Service = {
		CollectionService = game:GetService('CollectionService');
		CoreGui = game:GetService("CoreGui"),
		ReplicatedStorage = game:GetService("ReplicatedStorage");
		RunService = game:GetService("RunService");
		TweenService = game:GetService("TweenService");
		UserInputService = game:GetService("UserInputService");
		GuiService = game:GetService("GuiService");
		VirtualInputManager =game:GetService("VirtualInputManager");
		VirtualUser = game:GetService("VirtualUser");
		MarketplaceService = game:GetService("MarketplaceService");
		HttpService = game:GetService("HttpService");
		Lighting = game:GetService("Lighting");
		TeleportService = game:GetService("TeleportService");
		Players = game:GetService("Players");
	};
	id = game.PlaceId;
	jobid = game.JobId;
	allplayers = Service.Players.NumPlayers;
	SetAttribute = game.SetAttribute;
	mouse = Service.Players.LocalPlayer:GetMouse();
	camera = workspace.CurrentCamera;
	heartbeat = Service.RunService.Heartbeat;
	stepped = Service.RunService.Stepped;
	rendersteped = Service.RunService.RenderStepped;
	LocalPlayer = Service.Players.LocalPlayer;
	_Folder = "Fetching'Script/Config/" .. LocalPlayer.Name .. "/" .. id .. ".json";
	PlayerGui = LocalPlayer.PlayerGui;
	Backpack = LocalPlayer.Backpack;
	inf = math.huge;
	request = request;
	getconnections = getconnections;
	setfpscap = setfpscap;
	cloneref = cloneref;
	readfile = readfile;
	writefile = writefile;
	isfile = isfile;
	isfolder = isfolder;
	makefolder = makefolder;
	delfile = delfile;
	setclipboard = setclipboard;
	fireproximityprompt = fireproximityprompt;
	queue_on_teleport = queue_on_teleport;
	setscriptable = setscriptable;
	sethiddenproperty = sethiddenproperty;
	islclosure = islclosure;
	hookfunction = hookfunction;
	firetouchinterest = firetouchinterest;
	fireclickdetector = fireclickdetector;
	getnilinstances = getnilinstances;
	Service.ReplicatedStorage.Assets.GUI.DamageCounter.Enabled = false;
end;

if id == 2753915549 then
	w1 = true
elseif id == 4442272183 then
	w2 = true
elseif id == 7449423635 then
	w3 = true
end;

Save = function(a,b)
	if a ~= nil then
		_G.Configs[a] = b
	end
	if not isfolder("Fetching'Script") then
		makefolder("Fetching'Script")
	end
	writefile(_Folder, Service.HttpService:JSONEncode(_G.Configs))
end;

Load = function()
	local s,e = pcall(function()
		if not isfolder("Fetching'Script") then
			makefolder("Fetching'Script")
		end
		return Service.HttpService:JSONDecode(readfile(_Folder))
	end)
	if s then return e
	else
		Save()
		return Load()
	end
end;

Default = function(v, a)
	if type(v) == "table" then
		for i, k in pairs(v) do
			if _G.Configs[i] == nil then
				_G.Configs[i] = k
			end
		end
	else
		if _G.Configs[v] == nil then
			_G.Configs[v] = a
		end
	end
end;

Default({

})

DeleteSettings = function()
	if isfile(_Folder) then
		delfile(_Folder)
	end
end;

C = function() return _G.Configs end;

WeAreLoop = function(C)
	task.spawn(function()
		while task.wait() do
			C()
		end
	end)
end;

copy = function(str)
	setclipboard(str)
end;

loadstr = function(raw)
	return loadstring(game:HttpGet(raw))()
end;

translate=function(en,th)
	if _G.Thailand or getgenv().Thai or _G.Thai then
		return tostring(th)
	else 
		return tostring(en)
	end 
end;

tablecheck = function(config,_table)
	for _,v in pairs(_table) do
		if config[v] == true then
			return true 
		end 
	end 
	return false 
end;

ComF = function(...)
	return Service.ReplicatedStorage.Remotes.CommF_:InvokeServer(...)
end;

RbxtoNumber = function(rbx)
	return tonumber(string.match(rbx, "%d+"))
end;

HopServer = function()
	pcall(function()
		local _servers = "https://games.roblox.com/v1/games/"..id.."/servers/Public?sortOrder=Asc&limit=100"
		local ListServers = function (cursor)
			local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
			return Service.HttpService:JSONDecode(Raw)
		end
		local Server, Next;
		repeat
			local Servers = ListServers(Next)
			Server = Servers.data[1]
			Next = Servers.nextPageCursor
		until Server
		Service.TeleportService:TeleportToPlaceInstance(id,Server.id,LocalPlayer)
	end)
end;

html = function(text, color)
	if type(text) == "string" and typeof(color) == "Color3" then
		local r, g, b = math.floor(color.R * 255), math.floor(color.G * 255), math.floor(color.B * 255)
		return string.format('<font color="rgb(%d, %d, %d)">%s</font>', r, g, b, text)
	end
	return text
end;

Isnil = html("N/A", Color3.fromRGB(255, 255, 0))
IsSpawn = translate(html("Spawned", Color3.fromRGB(0, 255, 127)), html("เกิดแล้ว !", Color3.fromRGB(0, 255, 127)))
IsNotSpawn = translate(html("Not Spawned", Color3.fromRGB(255, 0, 0)), html("ยังไม่เกิด !", Color3.fromRGB(255, 0, 0)))

NumtoRbx = function(i)
	if type(i) == 'string' and not i:find('rbxassetid://') then
		return "rbxassetid://".. i
	elseif type(i) == 'number' then
		return "rbxassetid://".. i
	else
		return i
	end
end;

GetY = function(part)
	return part.Position + Vector3.new(0, part.Size.Y / 2, 0)
end;

IsAlive = function(model)
	if not model then return false end
	local Humanoid = model:FindFirstChild("Humanoid")
	return Humanoid and Humanoid.Health > 0
end

jobtp = function(job_id)
	Service.TeleportService:TeleportToPlaceInstance(id,job_id,LocalPlayer)
end;

Equip = function(ToolSe)
	if Backpack:FindFirstChild(ToolSe) and not LocalPlayer.Character:FindFirstChild(ToolSe) then
		local tool = Backpack:FindFirstChild(ToolSe)
		LocalPlayer.Character.Humanoid:EquipTool(tool)
	end
end;

EquipSelect = function()
	for _, p in pairs(LocalPlayer.Backpack:GetChildren()) do
		if p:IsA("Tool") and p.ToolTip == _G.Configs['Weapon'] then
			if LocalPlayer.Backpack:FindFirstChild(p.Name) then
				LocalPlayer.Character.Humanoid:EquipTool(p)
			end
		end
	end
	if not LocalPlayer.Character:FindFirstChild("HasBuso") then
		ComF("Buso")
	end
end

distance = function (a,b,noHeight)
	if not b then
		b = LocalPlayer.Character.HumanoidRootPart.Position
	end
	return (Vector3.new(a.X,not noHeight and a.Y,a.Z) - Vector3.new(b.X,not noHeight and b.Y,b.Z)).magnitude
end

task.spawn(function()
	if getconnections then
		for _,v in pairs(getconnections(LocalPlayer.Idled)) do
			if v["Disable"] then
				v["Disable"](v)
			elseif v["Disconnect"] then
				v["Disconnect"](v)
			end
		end
	else
		local VirtualUser = cloneref(Service.VirtualUser)
		LocalPlayer.Idled:Connect(function()
			VirtualUser:CaptureController()
			VirtualUser:ClickButton2(Vector2.new())
		end)
	end
end);

task.delay(2, function()
	if hookfunction and not islclosure(hookfunction) then
		hookfunction(require(Service.ReplicatedStorage.Effect.Container.Death), function()
		end)
		hookfunction(require(Service.ReplicatedStorage.Effect.Container.Respawn), function()
		end)
		hookfunction(require(Service.ReplicatedStorage:WaitForChild("GuideModule")).ChangeDisplayedNPC, function()
			return
		end)
		--[[hookfunction(error, function()
		end)
		hookfunction(warn, function()
		end)]]
	end
end)

if Service.CoreGui:FindFirstChild("Fetching") then
	Service.CoreGui:FindFirstChild("Fetching"):Destroy()
end;

if Service.UserInputService.TouchEnabled and not Service.UserInputService.KeyboardEnabled then
	_G.Mobile = true 
else 
	_G.PC = true 
end;

_G.Configs = Load();

tp = function(Position)
	local hrp = LocalPlayer.Character.HumanoidRootPart
	local Distance = (Position.Position - hrp.Position).Magnitude
	local CanTeleport = false
	local closestDistance = math.huge
	local closestV = nil

	if not LocalPlayer.Character:FindFirstChild("PartTele") then
		local partTele = Instance.new("Part", LocalPlayer.Character)
		partTele.Size = Vector3.new(10,1,10)
		partTele.Name = "PartTele"
		partTele.Anchored = true
		partTele.Transparency = 1
		partTele.CanCollide = false
		partTele.CFrame = hrp.CFrame
		partTele:GetPropertyChangedSignal("CFrame"):Connect(function()
			task.wait(0.01)
			hrp.CFrame = partTele.CFrame
		end)
	end

	local partTele = LocalPlayer.Character:FindFirstChild("PartTele")

	if Distance > 0 and Distance < 300 then
		local tw1 = Service.TweenService:Create(
			partTele,
			TweenInfo.new(0, Enum.EasingStyle.Linear),
			{CFrame = typeof(Position) == "CFrame" and Position or Position.CFrame}
		)
		tw1:Play()
		function StopTween()
			if tw1 then
				tw1:Cancel()
			end
			if LocalPlayer.Character:FindFirstChild("PartTele") then
				LocalPlayer.Character:FindFirstChild("PartTele"):Destroy()
			end
		end
		return task.wait(0.1)
	else
		if Distance > 300 then
			if C()['Upper Tween'] then
				if partTele.Position.Y ~= 150 then
					partTele.CFrame = CFrame.new(hrp.Position.X, 150, hrp.Position.Z)
				end
			end

			local tw = Service.TweenService:Create(
				partTele,
				TweenInfo.new(Distance / 300, Enum.EasingStyle.Linear),
				{CFrame = CFrame.new(Position.X, 150, Position.Z)}
			)
			tw:Play()

			function StopTween()
				if tw then
					tw:Cancel()
				end
				if LocalPlayer.Character:FindFirstChild("PartTele") then
					LocalPlayer.Character:FindFirstChild("PartTele"):Destroy()
				end
			end
		end
	end
end

index = {
	'Level',
	'Nearest',
	'Teleport Island',
	'Farm Select Boss',
	'All Boss',
	'Farm Materail',
	'Elite',
	'Farm Bone',
	'Cake Prince',
	'Farm Ectoplasm',
	'Sea Events',
	'Teleport to Boat',
	'Farm Chest',
	'Castle Raid',
	'Fruit Find',
	'Teleport to Mirage',
	'Teleport to Advanced Dealer',
	'Teleport to Gear',
	'Teleport to Kitsune',
	'Azure Embers',
	'Teleport Prehistoric',
	'Factory',
	'Auto Pole 1',
	'Auto Saber',
	'Auto Trident',
	'Auto Bazooka',
	'Auto CoolShade',
	'Auto LongSword',
	'Auto GravityBlade',
	'Auto SwanGlasses',
	'Auto Flail',
	'Auto DragonTrident',
	'Auto Rengoku',
	'Auto Law',
	'Auto PilotHelmet',
	'Auto VenomBow',
	'Auto Lei',
	'Auto TwinHooks',
	'Auto Canvender',
	'Auto BuddySword',
	'Holy Torch',
	'Auto Darkbeard',
	'Auto HallowScythe',
	'Auto Trial V4',
	'Teleport to Door',
	'Auto Evo Race V2',
	'Find Berry',
	'Sea 2',
	'Auto Raid',
	'Auto Train V4',
}

WeAreLoop(function()
	pcall(function()
		if tablecheck(_G.Configs, index) then
			if not C()['Sea Events'] then
				if LocalPlayer.Character:WaitForChild("Humanoid").Sit then
					LocalPlayer.Character:WaitForChild("Humanoid").Sit = false
				end
			end
			if not LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity1") then
				local BodyVelocity = Instance.new("BodyVelocity")
				BodyVelocity.Name = "BodyVelocity1"
				BodyVelocity.Parent = LocalPlayer.Character.HumanoidRootPart
				BodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
				BodyVelocity.Velocity = Vector3.new(0, 0, 0)
			end
			if not LocalPlayer.Character:FindFirstChild("IsHighlight") then
				local HL = Instance.new("Highlight")
				HL.Name = 'IsHighlight'
				HL.Parent = LocalPlayer.Character
				HL.Adornee = LocalPlayer.Character
				HL.OutlineColor = Color3.fromRGB(0, 0, 0)
				HL.FillColor = Color3.fromRGB(255, 255, 255)
				HL.FillTransparency = 0
			end
			for i, v in pairs(LocalPlayer.Character:GetChildren()) do
				if v:IsA("BasePart") then
					v.CanCollide = false
				end
			end
			LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
		else
			pcall(StopTween)
			if LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity1") then
				LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity1"):Destroy()
			end
			if LocalPlayer.Character:FindFirstChild("IsHighlight") then
				LocalPlayer.Character:FindFirstChild("IsHighlight"):Destroy()
			end
		end
	end)
end)

CheckItem = function(item)
	for _, v in ipairs(Backpack:GetChildren()) do
		if v.Name == item then
			return v
		end
	end
	for _, v in ipairs(LocalPlayer.Character:GetChildren()) do
		if v.Name == item then
			return v
		end
	end
	return nil
end

HaveItem = function(u)
	for i ,v in pairs(ComF("getInventoryWeapons")) do
		if v.Name == u then
			return v
		end
	end
	for i ,v in pairs(Backpack:GetChildren()) do
		if v:IsA("Tool") then
			if v.Name == u then
				return v
			end
		end
	end
	for i ,v in pairs(LocalPlayer.Character:GetChildren()) do
		if v:IsA("Tool") then
			if v.Name == u then
				return v
			end
		end
	end
end

Monster = function(Mon)
	if type(Mon) == "string" then
		local closestEnemy = nil
		local shortestDistance = math.huge
		for i, v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
			if v.Name == Mon and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
				local distance = (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
				if distance < shortestDistance then
					shortestDistance = distance
					closestEnemy = v
				end
			end
		end
		for i, v in pairs(game:GetService("ReplicatedStorage"):GetChildren()) do
			if v.Name == Mon and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
				local distance = (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
				if distance < shortestDistance then
					shortestDistance = distance
					closestEnemy = v
				end
			end
		end
		return closestEnemy
	elseif type(Mon) == "table" then
		local closestEnemy = nil
		local shortestDistance = math.huge
		for i, v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
			if table.find(Mon, v.Name) and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
				local distance = (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
				if distance < shortestDistance then
					shortestDistance = distance
					closestEnemy = v
				end
			end
		end
		for i, v in pairs(game:GetService("ReplicatedStorage"):GetChildren()) do
			if table.find(Mon, v.Name) and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
				local distance = (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
				if distance < shortestDistance then
					shortestDistance = distance
					closestEnemy = v
				end
			end
		end
		return closestEnemy
	end
end

local MobBlacklist = {}

DetectPartSpawnMob = function(name)
	local name1
	if string.find(name,"Lv.") then 
		name1 = name:gsub(" %pLv. %d+%p", "")
	end
	for i, v in pairs(game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:GetChildren()) do
		local stringgsub
		if string.find(v.Name, "Lv.") then
			stringgsub = v.Name:gsub(" %pLv. %d+%p", "")
		end
		if v:IsA("Part") and ((stringgsub and stringgsub == name) or name == v.Name or (name1 and v.Name == name1)) then
			return v
		end
	end
	for i, v in pairs(getnilinstances()) do
		local stringgsub
		if string.find(v.Name, "Lv.") then
			stringgsub = v.Name:gsub(" %pLv. %d+%p", "")
		end
		if v:IsA("Part") and ((stringgsub and stringgsub == name) or name == v.Name or (name1 and v.Name == name1)) then
			return v
		end
	end
end

GetPartAllMob = function(name)
	local results = {}
	local name1
	if string.find(name, "Lv.") then 
		name1 = name:gsub(" %pLv. %d+%p", "")
	end
	for _, v in pairs(game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:GetChildren()) do
		local stringgsub
		if string.find(v.Name, "Lv.") then
			stringgsub = v.Name:gsub(" %pLv. %d+%p", "")
		end
		if v:IsA("Part") and ((stringgsub and stringgsub == name) or name == v.Name or (name1 and v.Name == name1)) then
			table.insert(results, v)
		end
	end
	for _, v in pairs(getnilinstances()) do
		local stringgsub
		if string.find(v.Name, "Lv.") then
			stringgsub = v.Name:gsub(" %pLv. %d+%p", "")
		end
		if v:IsA("Part") and ((stringgsub and stringgsub == name) or name == v.Name or (name1 and v.Name == name1)) then
			table.insert(results, v)
		end
	end
	return results
end

WaitMonster = function(Path,u)
	if typeof(Path) == "table" then
		if #MobBlacklist >= 4 then
			MobBlacklist = {}
			return
		end
		local GetPart
		for i,v in next,Path do
			if not Monster(Path) then
				if not table.find(MobBlacklist,v) then
					GetPart = DetectPartSpawnMob(v)
					repeat
						tp(GetPart.CFrame * CFrame.new(0,40,0))
						wait(.5)
					until (GetPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 50 or (u and u())
				end
			end
		end
	else
		for i, v in next, GetPartAllMob(Path) do
			if not Monster(Path) then
				repeat
					tp(v.CFrame * CFrame.new(0, 40, 0))
					wait(0.5)
				until (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 50 or (u and u())
			end
		end
	end
end

BringMob = function(m)
	for _, v in pairs(workspace.Enemies:GetChildren()) do
		if v:FindFirstChild("Humanoid") and 
			v:FindFirstChild("HumanoidRootPart") and 
			not v:GetAttribute("IsBoss") and
			(v.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 270 then
			v.HumanoidRootPart.Rotation = Vector3.new(0,0,0)
			v.HumanoidRootPart.CFrame = m.HumanoidRootPart.CFrame
			v.Humanoid.JumpPower = 0
			v.Humanoid.WalkSpeed = 0
			v.Humanoid.Sit = true	
			v.Humanoid.PlatformStand = true			
			v.Humanoid:ChangeState(14)
			if v.Humanoid:FindFirstChild("Animator") then
				v.Humanoid.Animator:Destroy()
			end
			v.HumanoidRootPart.CanCollide = false
			pcall(function()
				sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
				setscriptable(LocalPlayer, "SimulationRadius", true)
			end)
		end
	end
end

WeAreLoop(function()
	if tablecheck(_G.Configs, index) then
		pcall(function()
			for i, v in next, workspace.Enemies:GetChildren() do
				if v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and (v.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= tonumber(100) then
					Service.ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Net"):WaitForChild("RE/RegisterAttack"):FireServer(0)
					local args = {
						[1] = v:FindFirstChild("HumanoidRootPart"),
						[2] = {}
					}
					for _, e in next, workspace:WaitForChild("Enemies"):GetChildren() do
						if e:FindFirstChild("Humanoid") and e.Humanoid.Health > 0 then
							table.insert(args[2], {
								[1] = e,
								[2] = e:FindFirstChild("HumanoidRootPart") or e:FindFirstChildOfClass("BasePart")
							})
						end
					end
					Service.ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Net"):WaitForChild("RE/RegisterHit"):FireServer(unpack(args))
				end
			end
		end)
	end
end)

Attack = function()
	pcall(function()
		for i, v in next, workspace.Enemies:GetChildren() do
			if v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and (v.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= tonumber(100) then
				Service.ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Net"):WaitForChild("RE/RegisterAttack"):FireServer(0)
				local args = {
					[1] = v:FindFirstChild("HumanoidRootPart"),
					[2] = {}
				}
				for _, e in next, workspace:WaitForChild("Enemies"):GetChildren() do
					if e:FindFirstChild("Humanoid") and e.Humanoid.Health > 0 then
						table.insert(args[2], {
							[1] = e,
							[2] = e:FindFirstChild("HumanoidRootPart") or e:FindFirstChildOfClass("BasePart")
						})
					end
				end
				Service.ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Net"):WaitForChild("RE/RegisterHit"):FireServer(unpack(args))
			end
		end
	end)
end

UseSkill = function(target)
	delay(0, function()
		local hrp = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
		if hrp and target and target:FindFirstChild("HumanoidRootPart") then
			local distance = (hrp.Position - target.HumanoidRootPart.Position).Magnitude
			if distance <= 50 then
				for _, tool in pairs(LocalPlayer.Character:GetChildren()) do
					if tool:IsA("Tool") and tool.ToolTip == C()['Weapon'] then
						local charTool = LocalPlayer.Character:FindFirstChild(tool.Name)
						if charTool and charTool:FindFirstChild("MousePos") then
							charTool.MousePos.Value = target.HumanoidRootPart.Position
							local skillKeys = {}
							if C()['Weapon'] == 'Melee' then
								skillKeys = {"Z", "X", "C"}
							elseif C()['Weapon'] == 'Sword' then
								skillKeys = {"Z", "X"}
							end
							for _, key in ipairs(skillKeys) do
								Service.VirtualInputManager:SendKeyEvent(true, key, false, game)
								Service.VirtualInputManager:SendKeyEvent(false, key, false, game)
							end
						end
					end
				end
			end
		end
	end)
end

RandomPosition = function()
	local angle = math.rad(math.random(0, 360))
	local radius = 20
	local x = math.cos(angle) * radius
	local z = math.sin(angle) * radius
	return CFrame.new(x, 40, z)
end

Kill = function(v, u)
	repeat
		Service.ReplicatedStorage.Remotes.CommE:FireServer("Ken", true)
		pcall(EquipSelect)
		BringMob(v)
		Attack()
		if C()['Random Position Farming'] then
			tp(v:GetPivot() * RandomPosition())
			Attack()
		else
			tp(v:GetPivot() * CFrame.new(0, 40, 0))
			Attack()
		end
		if C()['Use Skill'] then
			UseSkill(v)
		end
		Attack()
		task.wait()
	until not v:FindFirstChild("Humanoid") or v.Humanoid.Health <= 0 or not v:FindFirstChild("HumanoidRootPart") or (u and u())
end

KillBoss = function(v, u)
	repeat
		Service.ReplicatedStorage.Remotes.CommE:FireServer("Ken", true)
		pcall(EquipSelect)
		BringMob(v)
		Attack()
		if C()['Sea Events'] then
			local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
			if humanoid and humanoid.Health <= humanoid.MaxHealth * 0.25 then
				tp(v:GetPivot() * CFrame.new(0, 300, 0))
			end
		else
			tp(v:GetPivot() * RandomPosition())
			Attack()
		end
		if C()['Use Skill'] then
			UseSkill(v)
		end
		Attack()
		task.wait()
	until v.Humanoid.Health <= 0 or not v:FindFirstChild("HumanoidRootPart") or (u and u())
end

API_Request = loadstr("https://raw.githubusercontent.com/MerrySubs4t/Softwork/refs/heads/main/Fetching/Check%20Quest")
Level_Quest = API_Request:CheckQuest()[2]

task.spawn(function()
	while task.wait() do
		if C()['Level']then
			pcall(function()
				local Quest = API_Request:CheckQuest()
				local mon = string.gsub(string.gsub(string.gsub(PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "^Defeat %d+ ", ""), " %(.-%)$", ""), "s$", "")
				local lv = LocalPlayer.Data.Level.Value
				if lv >= 10 and lv <= 49 then
					local monsky = "God's Guard"
					if Monster(monsky) then
						Kill(Monster(monsky), function()
							return not C()['Level']
						end)
					else
						WaitMonster(monsky, function()
							return Monster(monsky) or not C()['Level']
						end)
					end
				elseif lv >= 50 and lv <= 99 then
					local monsky = {"God's Guard", "Shanda"}
					if Monster(monsky) then
						Kill(Monster(monsky), function()
							return not C()['Level']
						end)
					else
						WaitMonster(monsky, function()
							return Monster(monsky) or not C()['Level']
						end)
					end
				elseif lv >= 100 and lv <= 120 then
					local monsky = {"Royal Squad", "Royal Soldier"}
					if Monster(monsky) then
						Kill(Monster(monsky), function()
							return not C()['Level']
						end)
					else
						WaitMonster(monsky, function()
							return Monster(monsky) or not C()['Level']
						end)
					end
				elseif not LocalPlayer.PlayerGui.Main.Quest.Visible then
					if (LocalPlayer.Character.HumanoidRootPart.Position - Quest[4].Position).Magnitude <= 5 then
						wait(1)
						ComF("StartQuest", Quest[3], Level_Quest)
						if C()['Double Quest'] then
							if Level_Quest == 2 then
								Level_Quest = 1
							elseif Level_Quest == 1 and Quest[2] == 2 then
								Level_Quest = 2
							else
								Level_Quest = Quest[2]
							end
						end
					else
						tp(Quest[4])
					end
				else
					if Monster(mon) then
						Kill(Monster(mon), function()
							return not C()['Level'] or not LocalPlayer.PlayerGui.Main.Quest.Visible
						end)
					else
						WaitMonster(mon, function()
							return Monster(mon) or not C()['Level'] or not LocalPlayer.PlayerGui.Main.Quest.Visible
						end)
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Nearest'] then
			pcall(function()
				for _, enemy in pairs(workspace.Enemies:GetChildren()) do
					if enemy:IsA("Model") and enemy:FindFirstChild("Humanoid") and enemy:FindFirstChild("HumanoidRootPart") and Monster(enemy.Name) then
						local dist = (LocalPlayer.Character.HumanoidRootPart.Position - enemy.HumanoidRootPart.Position).Magnitude
						if dist < 500 then
							Kill(enemy, function()
								return not C()['Nearest']
							end)
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['V4'] then
			pcall(function()
				if LocalPlayer.Character:FindFirstChild("RaceEnergy") 
					and LocalPlayer.Character.RaceEnergy.Value >= 1 
					and LocalPlayer.Character:FindFirstChild("RaceTransformed") and not LocalPlayer.Character.RaceTransformed.Value then
					Backpack.Awakening.RemoteFunction:InvokeServer(true)
					task.wait(5)
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['V3'] then
			pcall(function()
				Service.ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("CommE"):FireServer("ActivateAbility")
				task.wait(15)
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Set Spawn'] then
			if LocalPlayer.Character.Humanoid.Health > 0 then
				ComF:InvokeServer("SetSpawnPoint")
				task.wait(5)
			end
		end
	end
end)

WeAreLoop(function()
	pcall(function()
		if C()['UP_Melee'] then
			C()("AddPoint", "Melee", 1)
		elseif _G.Configs['UP_Health'] then
			C()("AddPoint", "Defense", 1)
		elseif _G.Configs['UP_Sword'] then
			C()("AddPoint", "Sword", 1)
		elseif _G.Configs['UP_Gun'] then
			C()("AddPoint", "Gun", 1)
		elseif _G.Configs['UP_Fruit'] then
			C()("AddPoint", "Demon Fruit", 1)
		end
		task.wait(0.15)
	end)
end)

task.spawn(function()
	while task.wait() do
		if C()['Teleport Island'] then
			pcall(function()
				local Island_ = workspace.Map:FindFirstChild(C()['Select Island'])
				if Island_ then
					tp(Island_:GetPivot() * CFrame.new(0, 25, 0))
				end
			end)
		end
	end
end)

if w1 then
	TableBoss = {
		"The Gorilla King",
		"Bobby",
		"Yeti",
		"Mob Leader",
		"Vice Admiral",
		"Warden",
		"Chief Warden",
		"Swan",
		"Magma Admiral",
		"Fishman Lord",
		"Wysper",
		"Thunder God",
		"Cyborg",
		"Saber Expert"
	}
	AllMaterial = {
		"Magma Ore",
		"Leather",
		"Scrap Metal",
		"Angel Wings",
		"Fish Tail"
	}
elseif w2 then
	TableBoss = {
		"Diamond",
		"Jeremy",
		"Fajita",
		"Don Swan",
		"Smoke Admiral",
		"Cursed Captain",
		"Darkbeard",
		"Order",
		"Awakened Ice Admiral",
		"Tide Keeper"
	}
	AllMaterial = {
		"Magma Ore",
		"Scrap Metal",
		"Radioactive Material",
		"Vampire Fang",
		"Mystic Droplet",
	}
elseif w3 then
	TableBoss = {
		"Stone",
		"Venom Leader",
		"Kilo Admiral",
		"Captain Elephant",
		"Beautiful Pirate",
		"rip_indra True Form",
		"Longma",
		"Soul Reaper",
		"Cake Queen"
	}
	AllMaterial = {
		"Mini Tusk",
		"Fish Tail",
		"Scrap Metal",
		"Dragon Scale",
		"Conjured Cocoa",
		"Demonic Wisp",
		"Gunpowder",
	}
end

task.spawn(function()
	while task.wait() do
		if C()['All Boss'] then
			pcall(function()
				if Monster(TableBoss) then
					KillBoss(Monster(TableBoss), function()
						return not C()['All Boss']
					end)
				else
					if C()['HOP Boss'] then
						HopServer()
					else
						WaitMonster(TableBoss, function()
							return Monster(TableBoss) or not C()['All Boss']
						end)
					end
				end
			end)
		end
	end
end)

SelectBoss = "N/A"

task.spawn(function()
	while task.wait() do
		if C()['Farm Select Boss'] then
			pcall(function()
				if Monster(SelectBoss) then
					KillBoss(Monster(SelectBoss), function()
						return not C()['Farm Select Boss']
					end)
				else
					WaitMonster(SelectBoss, function()
						return not C()['Farm Select Boss']
					end)
				end
			end)
		end
	end
end)

MaterialMob = 'N/A'

task.spawn(function()
	while task.wait() do
		if C()['Farm Material'] then
			pcall(function()
				if w1 then
					if (C()['SelectMaterial'] == "Magma Ore") then
						MaterialMob = { "Military Soldier", "Military Spy" };
					elseif ((C()['SelectMaterial'] == "Leather") or (C()['SelectMaterial'] == "Scrap Metal")) then
						MaterialMob = { "Brute"};
					elseif (C()['SelectMaterial'] == "Angel Wings") then
						MaterialMob = { "God's Guard"};
					elseif (C()['SelectMaterial'] == "Fish Tail") then
						MaterialMob = { "Fishman Warrior", "Fishman Commando" };
					end
				end
				if w2 then
					if (C()['SelectMaterial'] == "Magma Ore") then
						MaterialMob = { "Magma Ninja" };
					elseif (C()['SelectMaterial'] == "Scrap Metal") then
						MaterialMob = { "Swan Pirate" };
					elseif (C()['SelectMaterial'] == "Radioactive Material") then
						MaterialMob = { "Factory Staff" };
					elseif (C()['SelectMaterial'] == "Vampire Fang") then
						MaterialMob = { "Vampire" };
					elseif (C()['SelectMaterial'] == "Mystic Droplet") then
						MaterialMob = { "Water Fighter", "Sea Soldier" };
					end
				end
				if w3 then
					if (C()['SelectMaterial'] == "Mini Tusk") then
						MaterialMob = { "Mythological Pirate" };
					elseif (C()['SelectMaterial'] == "Fish Tail") then
						MaterialMob = { "Fishman Raider", "Fishman Captain" };
					elseif (C()['SelectMaterial'] == "Scrap Metal") then
						MaterialMob = { "Jungle Pirate" };
					elseif (C()['SelectMaterial'] == "Dragon Scale") then
						MaterialMob = { "Dragon Crew Archer", "Dragon Crew Warrior" };
					elseif (C()['SelectMaterial'] == "Conjured Cocoa") then
						MaterialMob = { "Cocoa Warrior", "Chocolate Bar Battler", "Sweet Thief","Candy Rebel" };
					elseif (C()['SelectMaterial'] == "Demonic Wisp") then
						MaterialMob = { "Demonic Soul" };
					elseif (C()['SelectMaterial'] == "Gunpowder") then
						MaterialMob = { "Pistol Billionaire" };
					end
				end

				if Monster(MaterialMob) then
					Kill(Monster(MaterialMob), function()
						return not C()['Farm Material']
					end)
				else
					WaitMonster(MaterialMob, function()
						return not C()['Farm Material']
					end)
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Elite'] then
			pcall(function()
				local QuestTitle = LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text
				local QuestElite = Vector3.new(-5418.892578125, 313.74130249023, -2826.2260742188)
				local Ms = {"Diablo", "Deandre", "Urban"}
				local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
				if not LocalPlayer.PlayerGui.Main.Quest.Visible then
					if (QuestElite - hrp.Position).Magnitude > 1000 then
						ComF("requestEntrance", Vector3.new(-5076.99853515625, 314.8587341308594, -3151.824951171875))
						wait(2)
					else
						tp(CFrame.new(QuestElite))
					end
					if (QuestElite - hrp.Position).Magnitude <= 3 then
						ComF("EliteHunter")
					end
				else
					if Monster(Ms) then
						KillBoss(Monster(Ms), function()
							return not C()['Elite']
						end)
					else
						if C()['HOP Elite'] then
							HopServer()
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Farm Bone'] then
			local mon = {"Reborn Skeleton","Living Zombie","Demonic Soul","Posessed Mummy"}
			pcall(function()
				if Monster(mon) then
					Kill(Monster(mon), function()
						return not C()['Farm Bone']
					end)
				else
					WaitMonster(mon, function()
						return Monster(mon) or not C()['Farm Bone']
					end)
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Random Bone'] then
			pcall(function()
				ComF("Bones", "Buy", 1, 1)
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Cake Prince'] then
			pcall(function()
				local mon = {"Cookie Crafter","Cake Guard","Baking Staff","Head Baker"}
				local boss = {"Cake Prince","Dough King"}
				if Monster(boss) then
					KillBoss(Monster(boss), function()
						return not C()['Cake Prince']
					end)
				else
					if Monster(mon) then
						Kill(Monster(mon), function()
							return not C()['Cake Prince'] or not Monster(boss)
						end)
					else
						WaitMonster(mon, function()
							return not C()['Cake Prince'] or not Monster(boss)
						end)
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Farm Ectoplasm'] then
			pcall(function()
				local EsMonster = {'Cursed Captain','Ship Steward','Ship Officer','Ship Engineer','Ship Deckhand',}
				local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
				local targetPos = Vector3.new(928, 125, 32855)
				local entrancePos = Vector3.new(923.2125244140625, 125.40035247802734, 32852.83203125)
				if (targetPos - hrp.Position).Magnitude > 1500 then
					ComF("requestEntrance", entrancePos)
				else
					if Monster(EsMonster) then
						Kill(Monster(EsMonster), function()
							return not C()['Farm Ectoplasm']
						end)
					else
						WaitMonster(EsMonster, function()
							return not C()['Farm Ectoplasm']
						end)
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Sea Events'] then
			local enemyList = {"Shark", "Terrorshark", "Piranha", "Fish Crew Member"}
			if Monster(enemyList) then
				if LocalPlayer.Character.Humanoid.Sit then
					LocalPlayer.Character.Humanoid.Sit = false
				end
				KillBoss(Monster(enemyList), function()
					return not C()['Sea Events']
				end)
			end
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Sail Boat'] then
			Service.VirtualInputManager:SendKeyEvent(true, "W", false, game)
		end
	end
end)

function SpeedBoat()
	pcall(function()
		local vehicleSeats = {}
		for i, v in pairs(workspace.Boats:GetDescendants()) do
			if v:IsA("VehicleSeat") then
				table.insert(vehicleSeats, v)
			end
		end
		if C()['Speed Boat'] then
			for _, v in pairs(vehicleSeats) do
				v.MaxSpeed = 350
			end
		else
			for _, v in pairs(vehicleSeats) do
				v.MaxSpeed = 125
			end
		end
	end)
end

task.spawn(function()
	while task.wait() do
		if C()['Noclip Rock'] then
			pcall(function()
				if LocalPlayer.Character.Humanoid.Sit == true then
					for _, v in pairs(workspace.Boats:GetDescendants()) do
						if v:IsA("BasePart") and v.CanCollide == true then
							v.CanCollide = false
						end
					end
					for _, v in pairs(LocalPlayer.Character:GetDescendants()) do
						if v:IsA("BasePart") and v.CanCollide == true then
							v.CanCollide = false
						end
					end
				elseif LocalPlayer.Character.Humanoid.Sit == false then
					for _, v in pairs(workspace.Boats:GetDescendants()) do
						if v:IsA("BasePart") and v.CanCollide == false then
							v.CanCollide = true
						end
					end
					for _, v in pairs(LocalPlayer.Character:GetDescendants()) do
						if v:IsA("BasePart") and v.CanCollide == false then
							v.CanCollide = true
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Teleport to Boat'] then
			pcall(function()
				tp(workspace.Boats:FindFirstChild(C()['Select Boat']):GetPivot() * CFrame.new(0,15,0))
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Farm Chest'] then
			pcall(function()
				local nearestChest = nil
				local shortestDistance = math.huge
				local root = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

				for _, v in pairs(workspace.ChestModels:GetChildren()) do
					if v:IsA("Model") and v:FindFirstChild("TouchInterest", true) then
						local dist = (v:GetPivot().Position - root.Position).Magnitude
						if dist < shortestDistance then
							shortestDistance = dist
							nearestChest = v
						end
					end
				end

				if nearestChest then
					tp(nearestChest:GetPivot())
				elseif C()['Farm Chest HOP'] then
					HopServer()
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Castle Raid'] then
			pcall(function()
				if (CFrame.new(-5118.48682, 314.54129, -2958.64404, -0.387232125, 1.81507858e-08, 0.921982229, -7.54388907e-08, 1, -5.13709999e-08, -0.921982229, -8.94458196e-08, -0.387232125).Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 2000 then
					for _,v in pairs(workspace.Enemies:GetChildren()) do
						if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 and (v.HumanoidRootPart.Position-LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 1000 then
							Kill(v, function()
								return not C()['Castle Raid']
							end)
						end
					end
				else
					if (CFrame.new(-5118.48682, 314.54129, -2958.64404, -0.387232125, 1.81507858e-08, 0.921982229, -7.54388907e-08, 1, -5.13709999e-08, -0.921982229, -8.94458196e-08, -0.387232125).Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 2000 then
						for _,v in pairs(Service.ReplicatedStorage:GetChildren()) do
							if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 and (v.HumanoidRootPart.Position-LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 1000 then
								Kill(v, function()
									return not C()['Castle Raid']
								end)
							end
						end
					end
					tp(CFrame.new(-5118.48682, 314.54129, -2958.64404, -0.387232125, 1.81507858e-08, 0.921982229, -7.54388907e-08, 1, -5.13709999e-08, -0.921982229, -8.94458196e-08, -0.387232125))
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Fruit Find'] then
			pcall(function()
				for _, v in pairs(workspace:GetChildren()) do
					if v:IsA("Tool") and string.find(v.Name, "Fruit") then
						tp(v:GetPivot())
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Fruit Random'] then
			pcall(function()
				ComF("Cousin", "Buy")
				wait(5)
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Fruit Stored'] then
			pcall(function()
				local fruitsToStore = {
					["Bomb Fruit"] = "Bomb-Bomb",
					["Spike Fruit"] = "Spike-Spike",
					["Blade Fruit"] = "Blade-Blade",
					["Spring Fruit"] = "Spring-Spring",
					["Rocket Fruit"] = "Rocket-Rocket",
					["Smoke Fruit"] = "Smoke-Smoke",
					["Spin Fruit"] = "Spin-Spin",
					["Flame Fruit"] = "Flame-Flame",
					["Falcon Fruit"] = "Falcon",
					["Ice Fruit"] = "Ice-Ice",
					["Sand Fruit"] = "Sand-Sand",
					["Dark Fruit"] = "Dark-Dark",
					["Ghost Fruit"] = "Ghost-Ghost",
					["Diamond Fruit"] = "Diamond-Diamond",
					["Light Fruit"] = "Light-Light",
					["Love Fruit"] = "Love-Love",
					["Rubber Fruit"] = "Rubber-Rubber",
					["Barrier Fruit"] = "Barrier-Barrier",
					["Magma Fruit"] = "Magma-Magma",
					["Portal Fruit"] = "Portal-Portal",
					["Quake Fruit"] = "Quake-Quake",
					["Buddha Fruit"] = "Buddha-Buddha",
					["Spider Fruit"] = "Spider-Spider",
					["Phoenix Fruit"] = "Phoenix-Phoenix",
					["Rumble Fruit"] = "Rumble-Rumble",
					["Pain Fruit"] = "Pain-Pain",
					["Gravity Fruit"] = "Gravity-Gravity",
					["Dough Fruit"] = "Dough-Dough",
					["Shadow Fruit"] = "Shadow-Shadow",
					["Venom Fruit"] = "Venom-Venom",
					["Control Fruit"] = "Control-Control",
					["Spirit Fruit"] = "Spirit-Spirit",
					["Dragon Fruit"] = "Dragon-Dragon",
					["T-Rex Fruit"] = "T-Rex-T-Rex",
					["Kitsune Fruit"] = "Kitsune-Kitsune",
					["Yeti Fruit"] = "Yeti-Yeti",
					["Sound Fruit"] = "Sound-Sound",
					["Mammoth Fruit"] = "Mammoth-Mammoth",
					["Leopard Fruit"] = "Leopard-Leopard",
					["Blizzard Fruit"] = "Blizzard-Blizzard"
				}
				for fruitName, storeName in pairs(fruitsToStore) do
					local fruit = LocalPlayer.Character:FindFirstChild(fruitName) or Backpack:FindFirstChild(fruitName)
					if fruit then
						ComF("StoreFruit", storeName, fruit)
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Teleport to Mirage'] then
			pcall(function()
				tp(workspace.Map:FindFirstChild("MysticIsland"):GetPivot() * CFrame.new(0, 70, 0))
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Teleport to Advanced Dealer'] then
			pcall(function()
				if Service.ReplicatedStorage.NPCs:FindFirstChild("Advanced Fruit Dealer") then
					tp(Service.ReplicatedStorage.NPCs["Advanced Fruit Dealer"]:GetPivot())
				else
					tp(workspace.NPCs["Advanced Fruit Dealer"]:GetPivot())
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait()do
		if C()['Teleport to Gear'] then
			pcall(function()
				for _,v in pairs(workspace.Map:FindFirstChild('MysticIsland'):GetChildren()) do
					if v.Name == "Part" then
						if v.ClassName == "MeshPart" then
							tp(v.CFrame)
							v.Transparency = 0
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Teleport to Kitsune'] then
			pcall(function()
				tp(workspace.Map:FindFirstChild("KitsuneIsland"):GetPivot() * CFrame.new(0, 70, 0))
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Azure Embers'] then
			pcall(function()
				if workspace:FindFirstChild("AttachedAzureEmber") then
					tp(workspace:WaitForChild("EmberTemplate"):FindFirstChild("Part").CFrame)
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Teleport Prehistoric'] then
			pcall(function()
				tp(workspace.Map:FindFirstChild("PrehistoricIsland"):GetPivot() * CFrame.new(0, 70, 0))
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Dino Bone'] then
			if workspace:FindFirstChild("DinoBone") then
				tp(workspace:WaitForChild("DinoBone"):FindFirstChild("Part").CFrame)
			end
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Kill Aura'] then
			pcall(function()
				for _, enemy in pairs(workspace.Enemies:GetChildren()) do
					if enemy:FindFirstChild("Humanoid") and enemy:FindFirstChild("HumanoidRootPart") then
						local hum = enemy.Humanoid
						local hrp = enemy.HumanoidRootPart
						if hum.Health > 0 then
							task.wait(0.1)
							sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
							hum.Health = 0
							hrp.CanCollide = false
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Factory'] then
			pcall(function()
				if Monster("Core") then
					KillBoss("Core", function()
						return not C()['Factory']
					end)
				elseif Service.ReplicatedStorage:FindFirstChild("Core") then
					tp(CFrame.new(502.7349853515625, 143.0749053955078, -379.078125))
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto Pole 1'] then
			pcall(function()
				if w1 then
					if Monster("Thunder God") then
						Kill(Monster("Thunder God"), function()
							return not C()['Auto Pole 1']
						end)
					else
						if not C()['HOP Pole 1'] then
							WaitMonster("Thunder God", function()
								return not C()['Auto Pole 1']
							end)
						else
							HopServer()
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto Saber'] then
			pcall(function()
				if w1 then
					pcall(function()
						if LocalPlayer.Data.Level.Value >= 200 and workspace.Map.Jungle.Final.Part.Transparency == 0 then
							if game:GetService("Workspace").Map.Jungle.Final.Part.Transparency == 0 then
								if game:GetService("Workspace").Map.Jungle.QuestPlates.Door.Transparency == 0 then
									for i,v in next,game:GetService("Workspace").Map.Jungle.QuestPlates:GetChildren() do
										if v:IsA("Model") and v.Button:FindFirstChild("TouchInterest") then
											firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Button, 0)
										end
									end
								else
									if not game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress")["UsedTorch"] then
										game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","GetTorch")
										Equip("Torch")
										game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","DestroyTorch")
									elseif not game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress")["UsedCup"] then
										game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","GetCup")
										Equip("Cup")
										game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","FillCup",game:GetService("Players").LocalPlayer.Character.Cup)
										game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","SickMan")
									elseif not game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress")["KilledMob"] then
										game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","RichSon")
										if Monster("Mob Leader") then
											Kill(Monster("Mob Leader"), function()
												return game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress")["KilledMob"] or not C()['Auto Saber']
											end)
										end
									elseif not game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress")["UsedRelic"] then
										game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","RichSon")
										Equip("Relic")
										game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","PlaceRelic")
									end
								end
							else
								if Monster('Saber Expert') then
									Kill(Monster('Saber Expert'), function()
										return not C()['Auto Saber']
									end)
								else
									if not C()['HOP Saber'] then
										tp(CFrame.new(-1459, 30, -50))
									else
										HopServer()
									end
								end
							end
						end
					end)
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto Trident'] then
			pcall(function()
				if w1 then
					if Monster("Fishman Lord") then
						Kill(Monster("Fishman Lord"), function()
							return not C()['Auto Trident']
						end)
					else
						if not C()['HOP Trident'] then
							WaitMonster("Fishman Lord", function()
								return not C()['Auto Trident']
							end)
						else
							HopServer()
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto Bazooka'] then
			pcall(function()
				if w1 then
					if Monster("Wysper") then
						Kill(Monster("Wysper"), function()
							return not C()['Auto Bazooka']
						end)
					else
						if not C()['HOP Bazooka'] then
							WaitMonster("Wysper", function()
								return not C()['Auto Bazooka']
							end)
						else
							HopServer()
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto CoolShade'] then
			pcall(function()
				if w1 then
					if Monster("Cyborg") then
						Kill(Monster("Cyborg"), function()
							return not C()['Auto CoolShade']
						end)
					else
						if not C()['HOP CoolShade'] then
							WaitMonster("Cyborg", function()
								return not C()['Auto CoolShade']
							end)
						else
							HopServer()
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto LongSword'] then
			pcall(function()
				if w2 then
					if Monster("Diamond") then
						Kill(Monster("Diamond"), function()
							return not C()['Auto LongSword']
						end)
					else
						if not C()['HOP LongSword'] then
							WaitMonster("Diamond", function()
								return not C()['Auto LongSword']
							end)
						else
							HopServer()
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto GravityBlade'] then
			pcall(function()
				if w2 then
					if Monster("Fajita") then
						Kill(Monster("Fajita"), function()
							return not C()['Auto GravityBlade']
						end)
					else
						if not C()['HOP GravityBlade'] then
							WaitMonster("Fajita", function()
								return not C()['Auto GravityBlade']
							end)
						else
							HopServer()
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto SwanGlasses'] then
			pcall(function()
				if w2 then
					if Monster("Don Swan") then
						Kill(Monster("Don Swan"), function()
							return not C()['Auto SwanGlasses']
						end)
					else
						if not C()['HOP SwanGlasses'] then
							WaitMonster("Don Swan", function()
								return not C()['Auto SwanGlasses']
							end)
						else
							HopServer()
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto Flail'] then
			pcall(function()
				if w2 then
					if Monster("Smoke Admiral") then
						Kill(Monster("Smoke Admiral"), function()
							return not C()['Auto Flail']
						end)
					else
						if not C()['HOP Flail'] then
							WaitMonster("Smoke Admiral", function()
								return not C()['Auto Flail']
							end)
						else
							HopServer()
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto DragonTrident'] then
			pcall(function()
				if w2 then
					if Monster("Tide Keeper") then
						Kill(Monster("Tide Keeper"), function()
							return not C()['Auto DragonTrident']
						end)
					else
						if not C()['HOP DragonTrident'] then
							WaitMonster("Tide Keeper", function()
								return not C()['Auto DragonTrident']
							end)
						else
							HopServer()
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto Rengoku'] then
			if w2 then
				pcall(function()
					if CheckItem("Hidden Key") and HaveItem("Rengoku") then
						tp(CFrame.new(6571.1201171875, 299.23028564453, -6967.841796875))
					else
						local mon = {"Arctic Warrior", "Snow Lurker", "Awakened Ice Admiral"}
						if Monster(mon) then
							Kill(Monster(mon), function()
								return not C()['Auto Rengoku']
							end)
						else
							WaitMonster(mon, function()
								return Monster(mon) or not C()['Auto Rengoku']
							end)
						end
					end
				end)
			end
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto Law'] then
			pcall(function()
				if not CheckItem("Microchip") then 
					ComF("BlackbeardReward", "Microchip", "2") 
				end
				if Monster("Order") then
					Kill(Monster("Order"), function()
						return not C()['Auto Law'] or not Monster('Order') or Monster('Order').Humanoid.Health <= 0
					end)
				else
					if CheckItem("Microchip") then
						fireclickdetector(game:GetService("Workspace").Map.CircleIsland.RaidSummon.Button.Main.ClickDetector)
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto PilotHelmet'] then
			pcall(function()
				if w3 then
					if Monster("Stone") then
						Kill(Monster("Stone"), function()
							return not C()['Auto PilotHelmet']
						end)
					else
						if not C()['HOP PilotHelmet'] then
							WaitMonster("Stone", function()
								return not C()['Auto PilotHelmett']
							end)
						else
							HopServer()
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto VenomBow'] then
			pcall(function()
				if w3 then
					if Monster("Hydra Leader") then
						Kill(Monster("Hydra Leader"), function()
							return not C()['Auto VenomBow']
						end)
					else
						if not C()['HOP VenomBow'] then
							WaitMonster("Hydra Leader", function()
								return not C()['Auto VenomBow']
							end)
						else
							HopServer()
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto Lei'] then
			pcall(function()
				if w3 then
					if Monster("Kilo Admiral") then
						Kill(Monster("Kilo Admiral"), function()
							return not C()['Auto Lei']
						end)
					else
						if not C()['HOP Lei'] then
							WaitMonster("Kilo Admiral", function()
								return not C()['Auto Lei']
							end)
						else
							HopServer()
						end
					end
				end
			end)
		end
	end
end)


task.spawn(function()
	while task.wait() do
		if C()['Auto TwinHooks'] then
			pcall(function()
				if w3 then
					if Monster("Captain Elephant") then
						Kill(Monster("Captain Elephant"), function()
							return not C()['Auto TwinHooks']
						end)
					else
						if not C()['HOP TwinHooks'] then
							WaitMonster("Captain Elephant", function()
								return not C()['Auto TwinHooks']
							end)
						else
							HopServer()
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto Canvender'] then
			pcall(function()
				if w3 then
					if Monster("Beautiful Pirate") then
						Kill(Monster("Beautiful Pirate"), function()
							return not C()['Auto Canvender']
						end)
					else
						if not C()['HOP Canvender'] then
							WaitMonster("Beautiful Pirate", function()
								return not C()['Auto Canvender']
							end)
						else
							HopServer()
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto BuddySword'] then
			pcall(function()
				if w3 then
					if Monster("Cake Queen") then
						Kill(Monster("Cake Queen"), function()
							return not C()['Auto BuddySword']
						end)
					else
						if not C()['HOP BuddySword'] then
							WaitMonster("Cake Queen", function()
								return not C()['Auto BuddySword']
							end)
						else
							HopServer()
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Holy Torch'] then
			pcall(function()
				wait(1)
				repeat tp(CFrame.new(-10752, 417, -9366)) wait() until not C()['Holy Torch'] or (LocalPlayer.Character.HumanoidRootPart.Position-Vector3.new(-10752, 417, -9366)).Magnitude <= 10
				wait(1)
				repeat tp(CFrame.new(-11672, 334, -9474)) wait() until not C()['Holy Torch'] or (LocalPlayer.Character.HumanoidRootPart.Position-Vector3.new(-11672, 334, -9474)).Magnitude <= 10
				wait(1)
				repeat tp(CFrame.new(-12132, 521, -10655)) wait() until not C()['Holy Torch'] or (LocalPlayer.Character.HumanoidRootPart.Position-Vector3.new(-12132, 521, -10655)).Magnitude <= 10
				wait(1)
				repeat tp(CFrame.new(-13336, 486, -6985)) wait() until not C()['Holy Torch'] or (LocalPlayer.Character.HumanoidRootPart.Position-Vector3.new(-13336, 486, -6985)).Magnitude <= 10
				wait(1)
				repeat tp(CFrame.new(-13489, 332, -7925)) wait() until not C()['Holy Torch'] or (LocalPlayer.Character.HumanoidRootPart.Position-Vector3.new(-13489, 332, -7925)).Magnitude <= 10
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto Darkbeard'] then
			if Monster("Darkbeard") then
				KillBoss(Monster("Darkbeard"), function()
					return not C()['Auto Darkbeard']
				end)
			else
				if not C()['HOP Darkbeard'] then
					WaitMonster("Darkbeard", function()
						return not C()['Auto Darkbeard']
					end)
				else
					HopServer()
				end
			end
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto HallowScythe'] then
			if Monster("Soul Reaper") then
				KillBoss(Monster("Soul Reaper"), function()
					return not C()['Auto HallowScythe']
				end)
			else
				if not C()['HOP HallowScythe'] then
					WaitMonster("Soul Reaper", function()
						return not C()['Auto HallowScythe']
					end)
				else
					HopServer()
				end
			end
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto Trial V4'] then
			if w3 then
				pcall(function()
					if LocalPlayer.Data.Race.Value == "Mink" then	
						if workspace.Map:FindFirstChild("MinkTrial") then
							if (workspace.Map.MinkTrial.Ceiling.CFrame - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 200 then
								tp(workspace.Map.MinkTrial.Ceiling.CFrame * CFrame.new(0,-20,0))
							end
						end
					elseif LocalPlayer.Data.Race.Value == "Human" then
						if workspace.Map:FindFirstChild("HumanTrial") then
							for i,v in pairs(workspace.Enemies:GetChildren()) do
								if (v.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 400 then
									KillBoss(v, function()
										return not C()['Auto Trial V4']
									end)
								end
							end
						end
					elseif LocalPlayer.Data.Race.Value == "Cyborg" then
						if workspace.Map:FindFirstChild("CybrogTrial") then
							tp(workspace.Map.CyborgTrial.Floor.CFrame*CFrame.new(0,500,0))
						end
					elseif LocalPlayer.Data.Race.Value == "Skypiea" then
						if workspace.Map:FindFirstChild("SkyTrial") then
							if (workspace.Map.SkyTrial.Model.FinishPart.CFrame-LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 750 then
								tp(workspace.Map.SkyTrial.Model.FinishPart.CFrame)
							end
						end
					elseif LocalPlayer.Data.Race.Value == "Ghoul" then
						if workspace.Map:FindFirstChild("GhoulTrial") then 
							for i,v in pairs(workspace.Enemies:GetChildren()) do
								if (v.HumanoidRootPart.Position-game:GetService("Players").RootPart.Position).magnitude <= 400 then
									KillBoss(v, function()
										return not C()['Auto Trial V4']
									end)
								end
							end
						end
					elseif LocalPlayer.Data.Race.Value == "Fishman" then
						if workspace.Map:FindFirstChild("FishTrial") then
							if (workspace.Map:FindFirstChild("FishTrial").Part.Position-LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 500 then
								tp(CFrame.new(25032.043, 75.04647064, 12619.5967))
							end
						end
					end
				end)
			end
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Teleport to Door'] then
			if w3 then
				pcall(function()
					if LocalPlayer.Data.Race.Value == "Mink" then
						tp(workspace.Map["Temple of Time"].MinkCorridor.Door.Entrance.CFrame) 
					elseif LocalPlayer.Data.Race.Value == "Fishman" then
						tp(workspace.Map["Temple of Time"].FishmanCorridor.Door.Entrance.CFrame) 
					elseif LocalPlayer.Data.Race.Value == "Skypiea" then
						tp(workspace.Map["Temple of Time"].SkyCorridor.Door.Entrance.CFrame) 
					elseif LocalPlayer.Data.Race.Value == "Human" then
						tp(workspace.Map["Temple of Time"].HumanCorridor.Door.Entrance.CFrame) 
					elseif LocalPlayer.Data.Race.Value == "Ghoul" then
						tp(workspace.Map["Temple of Time"].GhoulCorridor.Door.Entrance.CFrame) 
					elseif LocalPlayer.Data.Race.Value == "Cybrog" then
						tp(workspace.Map["Temple of Time"].CybrogCorridor.Door.Entrance.CFrame) 
					end
				end)
			end
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto Evo Race V2'] then
			pcall(function() 
				if not LocalPlayer.Data.Race:FindFirstChild("Evolved") then
					ComF("Alchemist", "1")
					local step = ComF("Alchemist", "1")
					if step == 0 then
						local targetPos = CFrame.new(-2779, 72, -3574)
						tp(targetPos)
						if (targetPos - LocalPlayer.HumanoidRootPart.Position).Magnitude <= 2 then 
							ComF("Alchemist","2")
						end
					elseif step == 1 then
						local flowers = {"Flower 1", "Flower 2", "Flower 3"}
						for i, flower in ipairs(flowers) do
							if not (LocalPlayer.Backpack:FindFirstChild(flower) and LocalPlayer.Character:FindFirstChild(flower)) then
								if i < 3 then 
									tp(workspace["Flower" .. i].CFrame)
								elseif i == 3 then 
									if Monster("Zombie") then
										Kill(Monster("Zombie"), function()
											return not C()['Auto Evo Race V2'] or Backpack:FindFirstChild("Flower 3")
										end)
									else
										WaitMonster("Zomebie", function()
											return not C()['Auto Evo Race V2'] or Backpack:FindFirstChild("Flower 3")
										end)
									end
								end
								break
							end
						end
					elseif step == 2 then ComF("Alchemist", "3") end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Find Berry'] then
			pcall(function()
				local BerryBush = Service.CollectionService:GetTagged("BerryBush")
				for i = 1, #BerryBush do
					local Bush = BerryBush[i]
					for _, v in pairs(Bush.Parent:GetChildren()) do
						if v.Name == "Berries" then
							if v:IsA('Model') then
								tp(v:GetPivot())
							end
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Sea 2'] then
			pcall(function()
				if w1 then
					local IceDoor = workspace.Map.Ice.Door
					if IceDoor.CanCollide and IceDoor.Transparency == 1 then
						if LocalPlayer.Backpack:FindFirstChild("Key") or LocalPlayer.Character:FindFirstChild("Key") then
							Equip(LocalPlayer.Backpack:FindFirstChild("Key"))
							tp(CFrame.new(1347, 37, -1325))
						else
							tp(CFrame.new(4849, 5, 719))
						end
					else
						if Monster("Ice Admiral") then
							Kill(Monster("Ice Admiral"), function()
								return not C()['Sea 2']
							end)
						else
							WaitMonster("Ice Admiral", function()
								return not C()['Sea 2']
							end)
						end
						repeat ComF("TravelDressrosa") until not C()['Sea 2'] or not game:GetService("Workspace").Enemies:FindFirstChild("Ice Admiral")
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Look Moon'] then
			pcall(function()
				local moonDir = Service.Lighting:GetMoonDirection()
				local lookAtPos = camera.CFrame.p + moonDir * 100
				camera.CFrame = CFrame.lookAt(camera.CFrame.p, lookAtPos)
			end)
		end
	end
end)

task.spawn(function()
	while task.wait(5) do
		if C()['Buy Legendary Sword'] then
			pcall(function()
				ComF("LegendarySwordDealer", "2")
			end)
		end
	end
end)

task.spawn(function()
	while task.wait(1) do
		if C()['Auto Start Raid'] then
			pcall(function()
				local locations = game:GetService("Workspace")["_WorldOrigin"].Locations
				if not locations:FindFirstChild("Island 1")  then
					if LocalPlayer.Backpack:FindFirstChild("Special Microchip") then
						if w2 then
							fireclickdetector(game:GetService("Workspace").Map.CircleIsland.RaidSummon2.Button.Main.ClickDetector)
						elseif w3 then
							fireclickdetector(game:GetService("Workspace").Map["Boat Castle"].RaidSummon2.Button.Main.ClickDetector)
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait(5) do
		if C()['Auto Buy Awaken'] then
			pcall(function()
				ComF("Awakener","Check")
				ComF("Awakener","Awaken")
			end)
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if C()['Auto Raid'] then
			pcall(function()
				local locations = workspace["_WorldOrigin"].Locations
				for i,enemy in pairs(workspace.Enemies:GetChildren()) do
					if (enemy.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 1000 then
						if IsAlive(enemy) then
							local v = enemy
							tp(v.HumanoidRootPart.CFrame * CFrame.new(0, 40, 0))
							local Human = v:FindFirstChildOfClass("Humanoid")
							local distance = (v.HumanoidRootPart.CFrame.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
							if Human.Health > 0 and distance <= 40 then 
								Human.Health = 1
								Human.Health = 0
							end
						else
							for islands = 5, 1, -1 do
								local island = locations:FindFirstChild("Island " .. islands)
								if island then 
									tp(island.CFrame * CFrame.new(0, 100, 0)) break 
								end
							end
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait(1) do
		if C()['Auto Unstored Fruit'] then
			for i,v in pairs(ComF("getInventoryFruits")) do
				if v["Price"] < 10000000 then
					ComF("LoadFruit",v["Name"])
				end
			end
		end
	end
end)

task.spawn(function()
	local MobT = {
		"Reborn Skeleton",
		"Living Zombie",
		"Demonic Soul",
		"Posessed Mummy"
	}
	while task.wait() do
		if C()['Auto Train V4'] then
			if LocalPlayer.Character:FindFirstChild("RaceEnergy") then
				if LocalPlayer.Character.RaceEnergy.Value >= 1 and LocalPlayer.Character:FindFirstChild("RaceTransformed") and not LocalPlayer.Character.RaceTransformed.Value then
					tp(CFrame.new(-9515.3720703125, 164.00624084473, 5786.0610351562))
					Backpack.Awakening.RemoteFunction:InvokeServer(true)
					wait()
					ComF("UpgradeRace", "Check")
					ComF("UpgradeRace", "Buy")
				else
					if Monster(MobT) then
						Kill(Monster(MobT), function()
							return not C()['Auto Train V4']
						end)
					else
						WaitMonster(MobT, function()
							return not C()['Auto Train V4']
						end)
					end
				end
			end
		end
	end
end)



Icons = {
	general = 81707063924327,jigsaw = 112798812841371,
	eye = 127654928705257,special = 89895957638788,
	sofia = 100618692787198,document = 94464892425343,
	executor = 82489653632066,cube = 86971175780354,
	document_folder = 83641493809685,marker = 137560977237224,
	remote = 100436514092367,aim = 101516660165690,
	thunder = 97459673019824,robot = 139021543288287,
	setting = 93882575056497,chatbot = 90529487269002,
	people = 106898999468334,star = 71053300533420,
	focus = 108988520366437,cutesofia = 138127867432976,
	misc = 126463033320653,upload = 117415852023142,
	download = 94548929927000,display = 116121048695649,
	night = 105855852945791,day = 83758878478130,
	cloud = 107927309418429,bookmark = 96315518803478,
	location = 98398560997612, generalcolor = 17233391579,
	automatic = 17113787043, shop = 137810459172585
};

Fetching = loadstr("https://github.com/MerrySubs4t/Softwork/blob/main/Fetching/FrameworkUI.lua?raw=true")

Window = Fetching:Window({Logo = 128185233852701,Size = UDim2.new(0, 500,0, 375)})

_General = Window:CreateTab({Title = translate("General", "ทั่วไป"),Icon = Icons.thunder});
_Auto = Window:CreateTab({Title = translate("Automatic", "อัตโนมัติ"),Icon = Icons.special});
_Items = Window:CreateTab({Title = translate("Items", "ไอเท็ม"),Icon = Icons.star});
_Teleport = Window:CreateTab({Title = translate("Teleport", "เทเลพอร์ต"),Icon = Icons.location});
_Visual = Window:CreateTab({Title = translate("Visual", "การมองเห็น"),Icon = 127654928705257});
_Misc = Window:CreateTab({Title = translate("Others", "เพิ่มเติม"),Icon = Icons.jigsaw});

function Section(p, t, s)
	return p:CreateSection({
		Title = t,
		Side = s
	});
end

function Toggle(s, t, v, c)
	return s:CreateToggle({
		Title = t,
		Value = C()[v],
		CallBack = function(value)
			if c then
				c(value)
			end
			C()[v] = value
			Save(v, value)
		end
	})
end

function Button(s, t, c)
	return s:CreateButton({
		Title = t,
		CallBack = function()
			c()
		end
	})
end


function ToggleImage(s, t, v, i, c)
	return s:ImageToggle({
		Title = t,
		Icon = i,
		Value = C()[v],
		CallBack = function(value)
			if c then
				c(value)
			end
			C()[v] = value
			Save(v, value)
		end
	})
end

function Slider(s, t, min, max, v, r)
	return s:CreateSlider({
		Title = t,
		Min = min,
		Max = max,
		Value = C()[v],
		Rounding = 1,
		CallBack = function(value)
			C()[v] = value
			Save(v, value)
		end
	})
end

function Selection(s, t, l, v)
	return s:CreateSelect({
		Title = t,
		List = l,
		Value = C()[v],
		Callback = function(value)
			C()[v] = value
			Save(v, value)
		end
	})
end

function ImageHeader(s, t, d, i)
	return s:CreateImage({
		Title = t,
		Desc = d,
		Icon = "http://www.roblox.com/asset/?id=" .. tostring(i)
	})
end


local Advertisement = Section(_General, translate("Advertisement", "โฆษนา"), "l") do
	Advertisement:Image({Image = Icons.cutesofia})
	Advertisement:Line()
	Button(Advertisement, translate("Discord", "ดิสคอร์ด"), function()
		copy("https://discord.gg/uy6TP4ew7d")
	end)
end

local Level = Section(_General, translate("Level", "เลเวล"), 'r') do
	Toggle(Level, translate("Automatic Farm Level", "ออโต้ฟาร์มเลเวล"), "Level")
	Level:Line()
	Toggle(Level, translate("Automatic Nearest Monster", "ฟาร์มมอนสเตอร์รอบๆ"), "Nearest")
	if w1 then
		Level:Line()
		Toggle(Level, translate("Automatic Second Sea", "ออโต้ไปโลก 2"), "Sea 2")
	end
end

local Settings = Section(_General, translate("Settings", "การตั้งค่า"), 'r') do
	Selection(Settings, translate("Select Weapon", "เลือกอาวุธ"), {"Melee", "Sword"}, "Weapon")
	Settings:Line()
	Toggle(Settings, translate("Double Quest", "รับสองเควส"), "Double Quest")
	Settings:Line()
	Toggle(Settings, translate("Disable Notifications", "ปิดการแจ้งเตือน"), "Notify", function(v)
		if v then
			PlayerGui.Notifications.Enabled = false
		else
			PlayerGui.Notifications.Enabled = true
		end
	end)
	Settings:Line()
	Toggle(Settings, translate("Automatic Set Spawn", "ออโต้เซฟจุดเกิด"), "Set Spawn")
	Settings:Line()
	Toggle(Settings, translate("Random Position Farming", "สุ่มตำแหน่งรอบมอนสเตอร์ตอนฟาร์ม"), "Random Position Farming")
	Settings:Line()
	Toggle(Settings, translate("Force Upper Tweening", "บังคับขึ้นข้างบนตอนบิน"), "Upper Tween")
end

local Option = Section(_General, translate("Options", "การใช้งาน"), 'l') do
	Toggle(Option, translate("Automatic Enable V4", "ออโต้เปิดเผ่าวี 4"), "V4")
	Toggle(Option, translate("Automatic Enable V3", "ออโต้เปิดเผ่าวี 3"), "V3")
	Toggle(Option, translate("Use Skill Farm", "ใช้สกิลตอนฟาร์ม"), "Use Skill")
end

local Stats = Section(_General, translate("Stats", "ค่าพลัง"), 'r') do
	Toggle(Stats, translate("Upgrade Melee", "อัพค่าพลังหมัด"), "UP_Melee")
	Toggle(Stats, translate("Upgrade Defense", "อัพค่าพลังป้องกัน"), "UP_Healht")
	Toggle(Stats, translate("Upgrade Sword", "อัพค่าพลังดาบ"), "UP_Sword")
	Toggle(Stats, translate("Upgrade Gun", "อัพค่าพลังปืน"), "UP_Gun")
	Toggle(Stats, translate("Upgrade Fruit", "อัพค่าพลังผลปีศาจ"), "UP_Fruit")
	Stats:Line()
	Button(Stats, translate("Reset Stats", "รีเซ็ตค่าพลัง"),function()
		ComF("BlackbeardReward","Refund","2")
	end)
end

local Boss = Section(_General, translate("Boss", "บอส"), 'l') do
	CheckList = {}
	tableboss = {}
	for _, v in pairs(workspace.Enemies:GetChildren()) do
		if v:FindFirstChild("HumanoidRootPart") and v:GetAttribute("IsBoss") then
			if not CheckList[v.Name] then
				table.insert(tableboss, v.Name)
				CheckList[v.Name] = true
			end
		end
	end
	for _, v in pairs(Service.ReplicatedStorage:GetChildren()) do
		if v:FindFirstChild("HumanoidRootPart") and v:GetAttribute("IsBoss") then
			if not CheckList[v.Name] then
				table.insert(tableboss, v.Name)
				CheckList[v.Name] = true
			end
		end
	end
	local DropdownBoss = Boss:CreateDropdown({
		Title = translate("Select Boss", "เลือกบอส"),
		List = tableboss,
		Value = SelectBoss,
		Multi = false,
		Callback = function(value)
			SelectBoss = value
		end
	})
	Toggle(Boss, translate("Farm Select Boss", "ฟาร์มบอสที่เลือก"), "Farm Select Boss")
	Button(Boss, translate("Refresh", "รีเฟรช"), function()
		DropdownBoss:Clear()
		CheckList = {}
		for _, v in pairs(workspace.Enemies:GetChildren()) do
			if v:FindFirstChild("HumanoidRootPart") and v:GetAttribute("IsBoss") then
				if not CheckList[v.Name] then
					DropdownBoss:AddList(v.name)
					CheckList[v.Name] = true
				end
			end
		end
		for _, v in pairs(Service.ReplicatedStorage:GetChildren()) do
			if v:FindFirstChild("HumanoidRootPart") and v:GetAttribute("IsBoss") then
				if not CheckList[v.Name] then
					DropdownBoss:AddList(v.name)
					CheckList[v.Name] = true
				end
			end
		end
	end)
	Boss:Line()
	Toggle(Boss, translate("Farm All Boss", "ฟาร์มบอสทั้งหมด"), "All Boss")
	Toggle(Boss, translate("HOP Boss", "ย้ายเซิฟหาบอส"), "HOP Boss")
end

