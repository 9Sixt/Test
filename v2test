if not game:IsLoaded() then game.Loaded:Wait()end;repeat task.wait() until game:IsLoaded() and game:GetService("Players") and game:GetService("Players").LocalPlayer and game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.PlayerGui and game:GetService("Players").LocalPlayer.Backpack
--[[if getgenv().isRunning then return end
getgenv().isRunning = true]]
_G.Configs = {
	Fishing = false,
	Mode = "Instant",
	TrackEvents = false,
	EventsList = {"Forsaken Veil - Scylla", "Whales Pool"},
	EquipRod = true,
	Cast = true,
	Shake = true,
	SizeReel = true,
	Oxygen = true,
	Radar = true,
	Fishing_In_Water = true,
	RemoveNotifyAndFishModel = false,
	SellAll = false,
}
do	
	Service = {
		CoreGui = game:GetService("CoreGui"),
		ReplicatedStorage = game:GetService("ReplicatedStorage");
		RunService = game:GetService("RunService");
		TweenService = game:GetService("TweenService");
		UserInputService = game:GetService("UserInputService");
		GuiService = game:GetService("GuiService");
		VirtualInputManager =game:GetService("VirtualInputManager");
		VirtualUser = game:GetService("VirtualUser");
		MarketplaceService = game:GetService("MarketplaceService");
		HttpService = game:GetService("HttpService");
		Lighting = game:GetService("Lighting");
		TeleportService = game:GetService("TeleportService");
		Players = game:GetService("Players");
	};
	_id = game.PlaceId;
	_jobid = game.JobId;
	_allplayers = Service.Players.NumPlayers;
	_SetAttribute = game.SetAttribute;
	_executor = identifyexecutor();
	_levelexec = printidentity()
	_mouse = Service.Players.LocalPlayer:GetMouse();
	_camera = workspace.CurrentCamera;
	_heartbeat = Service.RunService.Heartbeat;
	_stepped = Service.RunService.Stepped;
	_rendersteped = Service.RunService.RenderStepped;
	_LocalPlayer = Service.Players.LocalPlayer;
	Character = _LocalPlayer.Character or _LocalPlayer.CharacterAdded:Wait();
	_Folder = "Fetching'Script/Config" .. "/" .. _LocalPlayer.Name .. "/" .. _id .. ".json"
	_PlayerGui = _LocalPlayer.PlayerGui;
	_Backpack = _LocalPlayer.Backpack;
	nilinstances = getnilinstances()
	request = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request;
	getconnections = getconnections or get_signal_cons;
	setfpscap = (syn and syn.setfpscap);
	cloneref = (syn and syn.cloneref);
	readfile = (syn and syn.readfile);
	writefile = (syn and syn.writefile);
	isfile = (syn and syn.isfile);
	isfolder = (syn and syn.isfolder);
	makefolder = (syn and syn.makefolder);
	delfile = (syn and syn.delfile);
	setclipboard = (syn and syn.setclipboard);
	_Icons = {
		general = 81707063924327,jigsaw = 112798812841371,
		eye = 127654928705257,special = 89895957638788,
		sofia = 100618692787198,document = 94464892425343,
		executor = 82489653632066,cube = 86971175780354,
		document_folder = 83641493809685,marker = 137560977237224,
		remote = 100436514092367,aim = 101516660165690,
		thunder = 97459673019824,robot = 139021543288287,
		setting = 93882575056497,chatbot = 90529487269002,
		people = 106898999468334,star = 71053300533420,
		focus = 108988520366437,cutesofia = 138127867432976,
		misc = 126463033320653,upload = 117415852023142,
		download = 94548929927000,display = 116121048695649,
		night = 105855852945791,day = 83758878478130,
		cloud = 107927309418429,bookmark = 96315518803478,
		location = 122781330909345, generalcolor = 17233391579,
		automatic = 17113787043, shop = 137810459172585
	};
end;
if Service.CoreGui:FindFirstChild("Fetching") then Service.CoreGui:FindFirstChild("Fetching"):Destroy()end;
if Service.UserInputService.TouchEnabled and not Service.UserInputService.KeyboardEnabled then Mobile = true else PC = true end;
task.spawn(function()
	if getconnections then
		for _,v in pairs(getconnections(_LocalPlayer.Idled)) do
			if v["Disable"] then
				v["Disable"](v)
			elseif v["Disconnect"] then
				v["Disconnect"](v)
			end
		end
	else
		local VirtualUser = cloneref(Service.VirtualUser)
		_LocalPlayer.Idled:Connect(function()
			VirtualUser:CaptureController()
			VirtualUser:ClickButton2(Vector2.new())
		end)
	end
end);
_copy = function(str)setclipboard(str)end;
_LocalPlayer.CharacterAdded:Connect(function(newCharacter)Character=newCharacter;end);
_loadstr = function(raw)loadstring(game:HttpGet(raw))()return;end;
_translate=function(en,th)if _G.Thailand or getgenv().Thai or _G.Thai then return tostring(th)else return tostring(en)end end;
_queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport);
_NotPlayers = function(Inc)return Service.Players:GetPlayerFromCharacter(Inc)end;
_IsRootPart = function()return Character and Character:FindFirstChild("HumanoidRootPart") ~= nil;end;
_checktable = function(config,_table)for _,v in pairs(_table)do if config[v] == true then return true end end return false end;
function LoadSettings()
	if readfile and writefile and isfile and isfolder then
		if not isfolder("Fetching'Script") then
			makefolder("Fetching'Script")
		end
		if not isfolder("Fetching'Script/Config") then
			makefolder("Fetching'Script/Config")
		end
		if not isfile(_Folder) then
			writefile(_Folder, game:GetService("HttpService"):JSONEncode(_G.Configs))
		else
			local Decode = game:GetService("HttpService"):JSONDecode(readfile(_Folder))
			for i,v in pairs(Decode) do
				_G.Configs[i] = v
			end
		end
	else
		return warn("Executor is Not Support")
	end
end
function SaveSettings()
	if readfile and writefile and isfile and isfolder then
		local configFile = _Folder
		if not isfile(configFile) then
			LoadSettings()
		else
			local Decode = game:GetService("HttpService"):JSONDecode(readfile(configFile))
			local tablex = {}
			for i,v in pairs(_G.Configs) do
				tablex[i] = v
			end
			writefile(configFile, game:GetService("HttpService"):JSONEncode(tablex))
		end
	else
		return warn("Executor is Not Supported")
	end
end
DeleteSettings = function()
	if isfile(_Folder) then
		delfile(_Folder)
	end
end;
NumtoRbx = function(i)
	if type(i) == 'string' and not i:find('rbxassetid://') then
		return "rbxassetid://".. i
	elseif type(i) == 'number' then
		return "rbxassetid://".. i
	else
		return i
	end
end;
toList = function(Inc)
	local value = {}
	for i, v in next, Inc:GetChildren() do
		if not table.find(value, v.Name) then
			table.insert(value, v.Name)
		end
	end
	return value
end;
HopServer = function()
	pcall(function()
		local Api = "https://games.roblox.com/v1/games/"
		local _servers = Api.._id.."/servers/Public?sortOrder=Asc&limit=100"
		local ListServers = function (cursor)
			local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
			return Service.HttpService:JSONDecode(Raw)
		end
		local Server, Next; repeat
			local Servers = ListServers(Next)
			Server = Servers.data[1]
			Next = Servers.nextPageCursor
		until Server
		Service.TeleportService:TeleportToPlaceInstance(_id,Server.id,_LocalPlayer)
	end)
end;
html = function(text, color)
	if type(text) == "string" and typeof(color) == "Color3" then
		local r, g, b = math.floor(color.R * 255), math.floor(color.G * 255), math.floor(color.B * 255)
		return string.format('<font color="rgb(%d, %d, %d)">%s</font>', r, g, b, text)
	end
	return text
end
Isnil = html("N/A", Color3.fromRGB(255, 255, 0))
DistanceFromCharacter = function(instance)
	if Character then
		return _LocalPlayer:DistanceFromCharacter(instance)
	else
		return nil
	end
end;
sendwebhook = function(url, data)
	local success, newdata = pcall(function()
		return Service.HttpService:JSONEncode(data)
	end)
	if not success then
		print("Error encoding data to JSON:", newdata)
		return
	end
	local headers = {
		["Content-Type"] = "application/json"
	}
	local success, response = pcall(function()
		return request({
			Url = url,
			Body = newdata,
			Method = "POST",
			Headers = headers
		})
	end)
	return success
end;
get = function(position)
	if _IsRootPart() then
		return math.floor((Character.HumanoidRootPart.Position - position).Magnitude)
	end
	return 0
end;
esp = function(instance, Color)
	if not instance:FindFirstChild("HighlightEffect") then
		local highlight = Instance.new("Highlight")
		highlight.Name = "HighlightEffect"
		highlight.Adornee = instance
		highlight.FillColor = Color
		highlight.OutlineColor = Color3.fromRGB(0, 0, 0)
		highlight.FillTransparency = 0.4
		highlight.OutlineTransparency = 0
		highlight.Parent = instance
	end
	if not instance:FindFirstChild("ESP") then
		local BillboardGui = Instance.new("BillboardGui")
		local TextLabel = Instance.new("TextLabel")
		BillboardGui.Adornee = instance
		BillboardGui.Name = "ESP"
		BillboardGui.Parent = instance
		BillboardGui.Size = UDim2.new(0, 100, 0, 150)
		BillboardGui.StudsOffset = Vector3.new(0, 2, 0)
		BillboardGui.AlwaysOnTop = true
		TextLabel.Parent = BillboardGui
		TextLabel.BackgroundTransparency = 1
		TextLabel.Position = UDim2.new(0, 0, 0, -50)
		TextLabel.Size = UDim2.new(0, 100, 0, 100)
		TextLabel.Font = Enum.Font.SourceSansSemibold
		TextLabel.TextSize = 20
		TextLabel.TextColor3 = Color
		TextLabel.TextStrokeTransparency = 0
		TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
		TextLabel.ZIndex = 10
		task.spawn(function()
			while task.wait(0.1) do
				local distance
				if instance:IsA("BasePart") then
					distance = get(instance.Position)
				elseif instance:IsA("Model") then
					distance = get(instance:GetPivot().Position)
				end
				TextLabel.Text = instance.Name .. " | " .. tostring(distance) .. "m"
			end
		end)
	end
end
espPlayers = function(instance, Color)
	if instance:IsA("BasePart") or instance:IsA("Model") then
		if not instance:FindFirstChild("HighlightEffect") then
			local highlight = Instance.new("Highlight")
			highlight.Name = "HighlightEffect"
			highlight.Adornee = instance
			highlight.FillColor = Color
			highlight.OutlineColor = Color3.fromRGB(0, 0, 0)
			highlight.FillTransparency = 0.4
			highlight.OutlineTransparency = 0
			highlight.Parent = instance
		end
		if not instance:FindFirstChild("ESP") then
			local BillboardGui = Instance.new("BillboardGui")
			local TextLabel = Instance.new("TextLabel")
			BillboardGui.Adornee = instance
			BillboardGui.Name = "ESP"
			BillboardGui.Parent = instance
			BillboardGui.Size = UDim2.new(0, 100, 0, 150)
			BillboardGui.StudsOffset = Vector3.new(0, 2, 0)
			BillboardGui.AlwaysOnTop = true
			TextLabel.Parent = BillboardGui
			TextLabel.BackgroundTransparency = 1
			TextLabel.Position = UDim2.new(0, 0, 0, -50)
			TextLabel.Size = UDim2.new(0, 100, 0, 100)
			TextLabel.Font = Enum.Font.SourceSansSemibold
			TextLabel.TextSize = 20
			TextLabel.TextColor3 = Color
			TextLabel.TextStrokeTransparency = 0
			TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
			TextLabel.ZIndex = 10
			task.spawn(function()
				while task.wait(0.1) do
					if instance:IsA("Model") then
						local distance = get(instance:GetPivot().Position)
						TextLabel.Text = instance.Name .. " | " .. tostring(distance) .. "m"
					end
				end
			end)
		end
	end
end;
GetY = function(part)
	local head = part.Position + Vector3.new(0, part.Size.Y / 2, 0)
	return head
end;
lookAt = function(part)
	local rootPosition = Character.HumanoidRootPart.Position
	local partPosition = part.Position
	local lookAtCFrame = CFrame.lookAt(rootPosition, partPosition)
	Character.HumanoidRootPart.CFrame = CFrame.new(rootPosition, partPosition)
end;
tp = function(new)
	pcall(function()
		if Character:FindFirstChild("HumanoidRootPart") then
			Character.HumanoidRootPart.CFrame = new
		end
	end)
end;
spin = function(targetCFrame)
	pcall(function()
		local Root = Character:FindFirstChild("HumanoidRootPart")
		if Root then
			Root.CFrame = CFrame.new(Root.Position) * targetCFrame.Rotation
		end
	end)
end
gametp = function(id)
	Service.TeleportService:Teleport(id,_LocalPlayer)
end;
jobtp = function(job_id)
	Service.TeleportService:TeleportToPlaceInstance(_id,job_id,_LocalPlayer)
end;
click = function()
	Service.VirtualUser:CaptureController()
	Service.VirtualUser:Button1Down(Vector2.new(1280, 672))
end;
Equip = function(ToolSe)
	if _Backpack:FindFirstChild(ToolSe) and not Character:FindFirstChild(ToolSe) then
		local tool = _Backpack:FindFirstChild(ToolSe)
		if _IsRootPart() then
			Character.Humanoid:EquipTool(tool)
		end
	end
end
local CFloop
cfly=function()
	local humanoid = Character:FindFirstChildOfClass('Humanoid')
	humanoid.PlatformStand = true
	local Head = Character:WaitForChild("Head")
	Head.Anchored = true
	if CFloop then 
		CFloop:Disconnect() 
	end
	CFloop =Service.RunService.Heartbeat:Connect(function(deltaTime)
		local moveDirection = humanoid.MoveDirection * (_G.Config["CFly Speed"] * deltaTime)
		local headCFrame = Head.CFrame
		local cameraCFrame = workspace.CurrentCamera.CFrame
		local cameraOffset = headCFrame:ToObjectSpace(cameraCFrame).Position
		cameraCFrame = cameraCFrame * CFrame.new(-cameraOffset.X, -cameraOffset.Y, -cameraOffset.Z + 1)
		local cameraPosition = cameraCFrame.Position
		local headPosition = headCFrame.Position
		local objectSpaceVelocity = CFrame.new(cameraPosition, Vector3.new(headPosition.X, cameraPosition.Y, headPosition.Z)):VectorToObjectSpace(moveDirection)
		Head.CFrame = CFrame.new(headPosition) * (cameraCFrame - cameraPosition) * CFrame.new(objectSpaceVelocity)
	end)
end
uncfly=function()
	if CFloop then
		CFloop:Disconnect()
	end
	if Character then
		Character.Humanoid.PlatformStand = false
		local Head = Character:WaitForChild("Head")
		if Character.HumanoidRootPart then
			Character.HumanoidRootPart.Anchored = false
			Head.Anchored = false
		end
	end
end
local Noclip = nil
local Clip = nil
noclip = function()
	Clip = false
	local function Nocl()
		if Clip == false and Character ~= nil then
			for _,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
				if v:IsA('BasePart') and v.CanCollide then
					v.CanCollide = false
				end
			end
		end
		wait(0.21)
	end
	Noclip = _stepped:Connect(Nocl)
end
Tween = function(p)
	local hrp = Character.HumanoidRootPart
	local Distance = (p.Position - hrp.Position).Magnitude
	workspace.Gravity = 0
	if Distance < 300 then
		hrp.CFrame = p
		return
	end
	if Distance > 300 then
		p = CFrame.new(p.Position.X, 150, p.Position.Z)
	elseif p.Position.Y >= 160 then
		p = CFrame.new(p.Position.X, p.Position.Y + 150, p.Position.Z)
	end
	if not Character:FindFirstChild("PartTele") then
		local partTele = Instance.new("Part", Character)
		partTele.Size = Vector3.new(10,1,10)
		partTele.Name = "PartTele"
		partTele.Anchored = true
		partTele.Transparency = 1
		partTele.CanCollide = false
		partTele.CFrame = hrp.CFrame
		partTele:GetPropertyChangedSignal("CFrame"):Connect(function()
			task.wait(0.01)
			hrp.CFrame = partTele.CFrame
		end)
	end
	local partTele = Character.PartTele
	local tw = Service.TweenService:Create(partTele, TweenInfo.new(Distance / 320, Enum.EasingStyle.Linear), {CFrame = p})
	tw:Play()
	function StopTween()
		if tw then
			tw:Cancel()
		end
		if Character:FindFirstChild("PartTele") then
			Character:FindFirstChild("PartTele"):Destroy()
		end
	end
end
WeAreLoop = function(C)
	task.spawn(function()
		while task.wait() do
			C()
		end
	end)
end
Fetching = loadstring(game:HttpGetAsync("https://github.com/MerrySubs4t/Softwork/blob/main/Fetching/FrameworkUI.lua?raw=true"))({"https://discord.gg/uy6TP4ew7d"})
LoadSettings()
Window = Fetching:Window({Logo = 128185233852701,Size = UDim2.new(0, 500,0, 375)})
Tabs = {
	['General'] = Window:CreateTab({Title = _translate("General", "ทั่วไป"),Icon = 97459673019824});
	['Auto'] = Window:CreateTab({Title = _translate("Automatic", "อัตโนมติ"),Icon = 89895957638788});
	['Teleport'] = Window:CreateTab({Title = _translate("Teleport", "เทเลพอร์ค"),Icon = _Icons.location});
	['Misc'] = Window:CreateTab({Title = _translate("Miscellaneous", "เพิ่มเติม"),Icon = 112798812841371});
}
General = {
	Advertisement = Tabs.General:CreateSection({
		Title = _translate("Advertisement", "โฆษณา"),
		Side = "l"
	});
	General = Tabs.General:CreateSection({
		Title = _translate("Fishing", "การตกปลา"),
		Side = "r"
	});
	Config = Tabs.General:CreateSection({
		Title = _translate("Settings", "ตั้งค่าการตกปลา"),
		Side = "r"
	});
	Sell = Tabs.General:CreateSection({
		Title = _translate("Selling", "การขาย"),
		Side = "l"
	});
	Item = Tabs.General:CreateSection({
		Title = _translate("Items", "ไอเท็ม"),
		Side = "l"
	});
	More = Tabs.General:CreateSection({
		Title = _translate("Other", "เพิ่มเติม"),
		Side = "r"
	});
}
Auto = {
	Events = Tabs.Auto:CreateSection({
		Title = _translate("Events", "อีเว้นท์ตอนนี้"),
		Side = "l"
	});
	Automatic = Tabs.Auto:CreateSection({
		Title = _translate("Automatic", "อัตโนมัติ"),
		Side = "r"
	});
}
Teleport = {
	Island = Tabs.Teleport:CreateSection({
		Title = _translate("Island", "เกาะ"),
		Side = "l"
	});
	Zone = Tabs.Teleport:CreateSection({
		Title = _translate("Zone", "โซน"),
		Side = "l"
	});
	Players = Tabs.Teleport:CreateSection({
		Title = _translate("Players", "ผู้เล่น"),
		Side = "r"
	});
	Boat = Tabs.Teleport:CreateSection({
		Title = _translate("Boat", "เรือ"),
		Side = "r"
	});
}
Misc = {
	Performant = Tabs.Misc:CreateSection({
		Title = _translate("Performant", "เพิ่มประสิทธิภาพ"),
		Side = "l"
	});
	Misc = Tabs.Misc:CreateSection({
		Title = _translate("Miscellaneous", "เพิ่มเติม"),
		Side = "r"
	});
	Visual = Tabs.Misc:CreateSection({
		Title = _translate("Visual", "การมองเห็น"),
		Side = "l"
	});
	Server = Tabs.Misc:CreateSection({
		Title = _translate("Server", "เซิร์ฟเวอร์"),
		Side = "r"
	});
}
General.Advertisement:Image({Image = _Icons.cutesofia})
General.Advertisement:Line()
General.Advertisement:CreateButton({Title = _translate("Join Discord", "เข้าร่วมดิสคอร์ด"),CallBack = function()
	_copy("https://discord.gg/uy6TP4ew7d")
end})
function EventsList()
	if _id == 72907489978215 then
		return {"Soon"}
	else
		return {"Forsaken Veil - Scylla","Whales Pool", "Great White Shark", "Whale Shark", "Orcas Pool", "Megalodon Default", "The Kraken Pool", "Great Hammerhead Shark"}
	end
end
function IsRod()
	return workspace.PlayerStats[_LocalPlayer.Name].T[_LocalPlayer.Name].Stats.rod.Value
end
Rod = IsRod()
Reel = Service.ReplicatedStorage.events["reelfinished "]
RodLabel = General.General:Paragarp({
	Title = _translate(html("Rod", Color3.fromRGB(85, 170, 255)) .. " : " .. Isnil, html("เบ็ด", Color3.fromRGB(85, 170, 255)) .. " : " .. Isnil)
})
WeAreLoop(function()
	pcall(function()
		task.wait(1)
		Rod = IsRod()
		RodLabel:Set(_translate(html("Rod", Color3.fromRGB(85, 170, 255)) .. " : " .. tostring(Rod), html("เบ็ด", Color3.fromRGB(85, 170, 255)) .. " : " .. tostring(Rod)))
	end)
end)
General.General:Line()
General.General:CreateToggle({
	Title = _translate("Automatic Fishing","ตกปลาอัตโนมัติ"),
	Value = _G.Configs.Fishing,
	CallBack = function(v)
		_G.Configs.Fishing = v
		SaveSettings()
	end})
General.General:Line()
General.General:CreateToggle({
	Title = _translate("Enable Track Events","เปิดใช้งานการแทรกอีเว้นท์"),
	Value = _G.Configs.TrackEvents,
	CallBack = function(v)
		_G.Configs.TrackEvents = v
		SaveSettings()
	end})
General.General:CreateDropdown({
	Title = _translate("Select Events", "เลือกอีเว้นท์"),
	List = EventsList(),
	Value = _G.Configs.EventsList,
	Multi = true,
	Callback = function(value)
		_G.Configs.EventsList = value
		SaveSettings()
	end})

WeAreLoop(function()
	if _G.Configs.TrackEvents then
		if _G.Configs.Fishing then
			pcall(function()
				for _, v in pairs(workspace.zones.fishing:GetChildren()) do
					if table.find(_G.Configs.EventsLists, v.Name) then 
						if v.Name == "Forsaken Veil - Scylla" then
							tp(CFrame.new(-2172, -11218, 7060))
							spin(Vector3.new(180, 81.55699920654297, 180))
						elseif v.Name == "Whales Pool" then
							tp(CFrame.new(GetY(v)) * CFrame.new(0,5,0))
							if Character:FindFirstChild("HumanoidRootPart") then
								Character.HumanoidRootPart.CFrame = Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.pi, 0)
							end
						elseif v.Name == "Orcas Pool" then
							tp(CFrame.new(GetY(v)) * CFrame.new(0,3,50))
							if Character:FindFirstChild("HumanoidRootPart") then
								Character.HumanoidRootPart.CFrame = Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.pi, 0)
							end
						elseif v.Name == "The Kraken Pool" then
							tp(CFrame.new(GetY(v)) * CFrame.new(15,5,0))
						elseif v.Name == "Great White Shark" then
							tp(CFrame.new(GetY(v)) * CFrame.new(15,5,0))
						elseif v.Name == "Megalodon Default" then
							tp(CFrame.new(GetY(v)) * CFrame.new(15,5,0))
						elseif v.Name == "Great Hammerhead Shark" then
							tp(CFrame.new(GetY(v)) * CFrame.new(15,5,0))
						elseif v.Name == "Whale Shark" then
							tp(CFrame.new(GetY(v)) * CFrame.new(15,5,0))
						else
							continue
						end
					end
				end
			end)
		end
	end
end)


General.Config:CreateToggle({Title = _translate("Equip","ออโต้ถือเบ็ด"),Value = _G.Configs.EquipRod,CallBack = function(v)
	_G.Configs.EquipRod = v
	SaveSettings()
end})
WeAreLoop(function()
	if _G.Configs.EquipRod and _G.Configs.Fishing then
		local Rod_InB = _Backpack:FindFirstChild(tostring(IsRod()))
		if Rod_InB and not Character:FindFirstChild(tostring(IsRod())) then
			Character.Humanoid:EquipTool(Rod_InB)
		end
	end
end)


General.Config:CreateToggle({Title = _translate("Cast","ออโต้โยนเบ็ด"),Value = _G.Configs.Cast,CallBack = function(v)
	_G.Configs.Cast = v
	SaveSettings()
end})
WeAreLoop(function()
	if _G.Configs.Cast and _G.Configs.Fishing then
		local Rod_In = Character:FindFirstChild(tostring(IsRod()))
		if Rod_In and not Rod_In:FindFirstChild("bobber", true) then
			Rod_In.events.cast:FireServer(100, 1)
		end
	end
end)

General.Config:CreateToggle({Title = _translate("Shake","ออโต้กดปุ่มเชค"),Value = _G.Configs.Shake,CallBack = function(v)
	_G.Configs.Shake = v
	SaveSettings()
end})
WeAreLoop(function()
	if _G.Configs.Shake and _G.Configs.Fishing then
		pcall(function()
			_PlayerGui:FindFirstChild("shakeui").safezone:FindFirstChild("button").Size = UDim2.new(1001, 0, 1001, 0)
			Service.VirtualUser:Button1Down(Vector2.new(1, 1))
			Service.VirtualUser:Button1Up(Vector2.new(1, 1))
		end)
	end
end)

General.Config:CreateToggle({Title = _translate("Increase Bar Size","เพิ่มขนาดหลอดตอนดึงปลา"),Value = _G.Configs.SizeReel,CallBack = function(v)
	_G.Configs.SizeReel = v
	SaveSettings()
end})
WeAreLoop(function()
	if _G.Configs.SizeReel then
		pcall(function()
			_PlayerGui.reel.bar.playerbar.Size = UDim2.new(1, 0, 1, 0)
		end)
	end
end)

General.Config:CreateSelect({
	Title = _translate("Reeling", "โหมดดึงปลา"),
	Desc = _translate("Select Reeling Mode", "เลือกโหมดดึงปลา"),
	List = {"Beta - Cancle Animation", "Instant","Disable"},
	Value = _G.Configs.Mode,
	Callback = function(value)
		_G.Configs.Mode = value
		SaveSettings()
	end,
})
local screenCenter = Vector2.new(workspace.CurrentCamera.ViewportSize.X/2, workspace.CurrentCamera.ViewportSize.Y/2)
task.spawn(function()
	while task.wait(1) do
		if _G.Configs.Mode == "Beta - Cancle Animation" then
			if _G.Configs.Fishing then
				Service.VirtualUser:Button1Down(screenCenter)
				Service.VirtualUser:Button1Up(screenCenter)
			end
		end
	end
end)
WeAreLoop(function()
	if _G.Configs.Mode == "Instant" and _G.Configs.Fishing then
		if _PlayerGui:FindFirstChild("reel") then
			Reel:FireServer(100, true)
			Service.VirtualUser:Button1Down(Vector2.new(1, 1))
			Service.VirtualUser:Button1Up(Vector2.new(1, 1))
		end
	end
	if _G.Configs.Mode == "Beta - Cancle Animation" and _G.Configs.Fishing then
		if Character then
			local Rod_In = Character:FindFirstChild(tostring(IsRod()))
			local humanoid = Character:FindFirstChildOfClass("Humanoid")
			if humanoid then
				for _, track in pairs(humanoid:GetPlayingAnimationTracks()) do
					if track.Animation.AnimationId == "rbxassetid://134146970600575" then
						task.spawn(function()
							pcall(function()
								_PlayerGui.reel:Destroy()
							end)
							task.wait(0.5)
						end)
						Reel:FireServer(100, true)
						Rod_In.events.reset:FireServer()
						Rod_In.Parent = _Backpack
					end
				end
			end
		end
	end
end)
WeAreLoop(function()
	pcall(function()
		Character.HumanoidRootPart.reeling:Destroy()
	end)
end)

General.Sell:CreateToggle({Title = _translate("Automatic Selling All Fish","ขายปลาทั้งหมดอัตโนมัติ"),Value = _G.Configs.SellAll,CallBack = function(v)
	_G.Configs.SellAll = v
	SaveSettings()
end})
General.Sell:Line()
General.Sell:CreateButton({Title = _translate("Sell Holding Fish", "ขายปลาที่ถืออยู่"),CallBack = function()
	Service.ReplicatedStorage.events.Sell:InvokeServer()
end})
General.Sell:Line()
General.Sell:CreateButton({Title = _translate("Sell All Fish", "ขายปลาทั้งหมด"),CallBack = function()
	Service.ReplicatedStorage.events.SellAll:InvokeServer()
end})
task.spawn(function()
	while task.wait(10) do
		if _G.Configs.SellAll then
			Service.ReplicatedStorage.events.SellAll:InvokeServer()
		end
	end
end)

General.More:CreateToggle({Title = _translate("Remove Notify & Fish Model","ลบการแจ้งเตือนและโมเดลปลา"),Value = _G.Configs.RemoveNotifyAndFishModel,CallBack = function(v)
	_G.Configs.RemoveNotifyAndFishModel = v
	SaveSettings()
end})
General.More:CreateToggle({Title = _translate("Walk On Water","เดินบนน้ำ"),Value = _G.Configs.Fishing_In_Water,CallBack = function(v)
	_G.Configs.Fishing_In_Water = v
	SaveSettings()
end})
General.More:CreateToggle({Title = _translate("Enable Radar","เปิดใช้งานเรดาร์"),Value = _G.Configs.Radar,CallBack = function(v)
	_G.Configs.Radar = v
	SaveSettings()
end})
General.More:CreateToggle({Title = _translate("Infinite Oxygen","เปิดใช้งานการหายใจใต้น้ำ"),Value = _G.Configs.Oxygen,CallBack = function(v)
	_G.Configs.Oxygen = v
	SaveSettings()
end})
WeAreLoop(function()
	pcall(function()
		if _G.Configs.RemoveNotifyAndFishModel then
			for _, v in pairs(workspace.active:GetChildren()) do
				if v:IsA("Model") and v.Name ~= "OceanPOI's" then
					if v:FindFirstChild("Hitbox", true) then
						v:Destroy()
					end
				end
			end
			for	_, v in pairs(_PlayerGui.hud.safezone.announcements:GetChildren()) do
				if v.Name == "catch" then
					v:Destroy()
				end
			end
		end
	end)
end)
WeAreLoop(function()
	pcall(function()
		if _G.Configs.Fishing_In_Water then
			for _, v in pairs(workspace.zones.fishing:GetChildren()) do
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
		else
			for _, v in pairs(workspace.zones.fishing:GetChildren()) do
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
		end
		if _G.Configs.Radar then
			for _, v1 in pairs(game:GetService("CollectionService"):GetTagged("radarTag")) do
				if v1:IsA("BillboardGui") or v1:IsA("SurfaceGui") then
					v1.Enabled = true
				end
			end
		else
			for _, v1 in pairs(game:GetService("CollectionService"):GetTagged("radarTag")) do
				if v1:IsA("BillboardGui") or v1:IsA("SurfaceGui") then
					v1.Enabled = false
				end
			end
		end
		if _G.Configs.Oxygen then
			Character.Resources.oxygen.Disabled = true
		else
			Character.Resources.oxygen.Disabled = false
		end
	end)
end)
_G.Item = "nil"
General.Item:CreateDropdown({
	Title = _translate("Nearby Item", "ไอเท็มรอบตัว"),
	List = toList(workspace.world.interactables),
	Value = _G.Item,
	Multi = false,
	Callback = function(value)
		_G.Item = value
		SaveSettings()
	end})
General.Item:CreateButton({Title = _translate("Teleport", "เทเลพอร์ต"),CallBack = function()
	if _G.Item ~= "nil" and workspace.world.interactables:FindFirstChild(_G.Item, true) then
		local item = workspace.world.interactables:FindFirstChild(_G.Item, true)
		tp(item:GetPivot())
	else
		warn("ไอเท็มที่เลือกไม่มีอยู่!")
	end
end})
General.Item:Line()

_indexBodyClip = {
	'Fishing'
}

task.spawn(function()
	while task.wait() do
		pcall(function()
			if _checktable(_G.Configs, _indexBodyClip) then
				if _IsRootPart() then
					if not Character.HumanoidRootPart:FindFirstChild("BodyVelocity1") then
						if Character.Humanoid.Sit == true then
							Character.Humanoid.Sit = false
						end

						local bodyVelocity = Instance.new("BodyVelocity")
						bodyVelocity.Name = "BodyVelocity1"
						bodyVelocity.Parent = Character.HumanoidRootPart
						bodyVelocity.velocity = Vector3.new(0, 0, 0)
						bodyVelocity.maxForce = Vector3.new(100000, 100000, 100000)
					end
				end
			else
				Character.HumanoidRootPart:FindFirstChild("BodyVelocity1"):Destroy()
				pcall(StopTween)
			end
		end)
	end
end)
